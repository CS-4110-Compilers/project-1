   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(INT,'int',1,0)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : INT . LexToken(ID,'fact',1,4)
   yacc.py: 471:Action : Reduce rule [Type -> INT] with ['int'] and goto state 8
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : Type . LexToken(ID,'fact',1,4)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : Type ID . LexToken(LEFTPAREN,'(',1,9)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : Type ID LEFTPAREN . LexToken(INT,'int',1,10)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : Type ID LEFTPAREN INT . LexToken(ID,'x',1,14)
   yacc.py: 471:Action : Reduce rule [Type -> INT] with ['int'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : Type ID LEFTPAREN Type . LexToken(ID,'x',1,14)
   yacc.py: 445:Action : Shift and goto state 58
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 435:Stack  : Type ID LEFTPAREN Type ID . LexToken(RIGHTPAREN,')',1,15)
   yacc.py: 471:Action : Reduce rule [Variable -> Type ID] with [None,'x'] and goto state 39
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : Type ID LEFTPAREN Variable . LexToken(RIGHTPAREN,')',1,15)
   yacc.py: 471:Action : Reduce rule [Formals -> Variable] with [None] and goto state 37
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals . LexToken(RIGHTPAREN,')',1,15)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN . LexToken(LEFTBRACE,'{',1,17)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE . LexToken(IF,'if',1,51)
   yacc.py: 445:Action : Shift and goto state 106
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF . LexToken(LEFTPAREN,'(',1,54)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN . LexToken(ID,'x',1,55)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN ID . LexToken(GREATER,'>',1,56)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN LValue . LexToken(GREATER,'>',1,56)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 198
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression . LexToken(GREATER,'>',1,56)
   yacc.py: 445:Action : Shift and goto state 146
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression GREATER . LexToken(INTCONSTANT,'1',1,57)
   yacc.py: 471:Action : Reduce rule [CompareOperator -> GREATER] with ['>'] and goto state 137
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression CompareOperator . LexToken(INTCONSTANT,'1',1,57)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression CompareOperator INTCONSTANT . LexToken(RIGHTPAREN,')',1,58)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression CompareOperator Constant . LexToken(RIGHTPAREN,')',1,58)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 183
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression CompareOperator Expression . LexToken(RIGHTPAREN,')',1,58)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression CompareOperator Expression] with [None,None,None] and goto state 198
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression . LexToken(RIGHTPAREN,')',1,58)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN . LexToken(RETURN,'return',1,60)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN . LexToken(ID,'x',1,67)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN ID . LexToken(MULTIPLICATION,'*',1,69)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN LValue . LexToken(MULTIPLICATION,'*',1,69)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 167
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression . LexToken(MULTIPLICATION,'*',1,69)
   yacc.py: 445:Action : Shift and goto state 141
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression MULTIPLICATION . LexToken(ID,'fact',1,71)
   yacc.py: 471:Action : Reduce rule [ArithmaticOperator -> MULTIPLICATION] with ['*'] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator . LexToken(ID,'fact',1,71)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID . LexToken(LEFTPAREN,'(',1,75)
   yacc.py: 445:Action : Shift and goto state 154
   yacc.py: 410:
   yacc.py: 411:State  : 154
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN . LexToken(ID,'x',1,76)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN ID . LexToken(MINUS,'-',1,77)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN LValue . LexToken(MINUS,'-',1,77)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression . LexToken(MINUS,'-',1,77)
   yacc.py: 445:Action : Shift and goto state 140
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression MINUS . LexToken(INTCONSTANT,'1',1,78)
   yacc.py: 471:Action : Reduce rule [ArithmaticOperator -> MINUS] with ['-'] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression ArithmaticOperator . LexToken(INTCONSTANT,'1',1,78)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression ArithmaticOperator INTCONSTANT . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression ArithmaticOperator Constant . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 182
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 182
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression ArithmaticOperator Expression . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression ArithmaticOperator Expression] with [None,None,None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [ExpressionList -> Expression] with [None] and goto state 189
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 116
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN ExpressionList . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [Actuals -> ExpressionList] with [None] and goto state 187
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 187
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Actuals . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 445:Action : Shift and goto state 214
   yacc.py: 410:
   yacc.py: 411:State  : 214
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Actuals RIGHTPAREN . LexToken(SEMICOLON,';',1,80)
   yacc.py: 471:Action : Reduce rule [Call -> ID LEFTPAREN Actuals RIGHTPAREN] with ['fact','(',None,')'] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator Call . LexToken(SEMICOLON,';',1,80)
   yacc.py: 471:Action : Reduce rule [Expression -> Call] with [None] and goto state 182
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 182
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator Expression . LexToken(SEMICOLON,';',1,80)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression ArithmaticOperator Expression] with [None,None,None] and goto state 167
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression . LexToken(SEMICOLON,';',1,80)
   yacc.py: 445:Action : Shift and goto state 202
   yacc.py: 410:
   yacc.py: 411:State  : 202
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression SEMICOLON . LexToken(ELSE,'else',1,82)
   yacc.py: 471:Action : Reduce rule [ReturnStatement -> RETURN Expression SEMICOLON] with ['return',None,';'] and goto state 91
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN ReturnStatement . LexToken(ELSE,'else',1,82)
   yacc.py: 471:Action : Reduce rule [Statement -> ReturnStatement] with [None] and goto state 233
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 233
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement . LexToken(ELSE,'else',1,82)
   yacc.py: 445:Action : Shift and goto state 241
   yacc.py: 410:
   yacc.py: 411:State  : 241
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE . LexToken(RETURN,'return',1,87)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN . LexToken(INTCONSTANT,'1',1,94)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN INTCONSTANT . LexToken(SEMICOLON,';',1,95)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN Constant . LexToken(SEMICOLON,';',1,95)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 167
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN Expression . LexToken(SEMICOLON,';',1,95)
   yacc.py: 445:Action : Shift and goto state 202
   yacc.py: 410:
   yacc.py: 411:State  : 202
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN Expression SEMICOLON . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [ReturnStatement -> RETURN Expression SEMICOLON] with ['return',None,';'] and goto state 91
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE ReturnStatement . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [Statement -> ReturnStatement] with [None] and goto state 245
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 245
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE Statement . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement ELSE Statement] with ['if','(',None,')',None,'else',None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IfStatement . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [Statement -> IfStatement] with [None] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE Statement . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement] with [None] and goto state 81
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE Statements . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE Statements RIGHTBRACE . LexToken(VOID,'void',1,99)
   yacc.py: 471:Action : Reduce rule [StatementBlock -> LEFTBRACE Statements RIGHTBRACE] with ['{',None,'}'] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock . LexToken(VOID,'void',1,99)
   yacc.py: 471:Action : Reduce rule [FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock] with [None,'fact','(',None,')',None] and goto state 4
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 435:Stack  : FunctionDeclaration . LexToken(VOID,'void',1,99)
   yacc.py: 471:Action : Reduce rule [Declaration -> FunctionDeclaration] with [None] and goto state 2
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : Declaration . LexToken(VOID,'void',1,99)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : Declaration VOID . LexToken(ID,'main',1,104)
   yacc.py: 445:Action : Shift and goto state 23
   yacc.py: 410:
   yacc.py: 411:State  : 23
   yacc.py: 435:Stack  : Declaration VOID ID . LexToken(LEFTPAREN,'(',1,109)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN . LexToken(RIGHTPAREN,')',1,110)
   yacc.py: 445:Action : Shift and goto state 43
   yacc.py: 410:
   yacc.py: 411:State  : 43
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN . LexToken(LEFTBRACE,'{',1,112)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE . LexToken(INT,'int',1,186)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE INT . LexToken(ID,'x',1,190)
   yacc.py: 471:Action : Reduce rule [Type -> INT] with ['int'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE Type . LexToken(ID,'x',1,190)
   yacc.py: 445:Action : Shift and goto state 58
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE Type ID . LexToken(SEMICOLON,';',1,191)
   yacc.py: 471:Action : Reduce rule [Variable -> Type ID] with [None,'x'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE Variable . LexToken(SEMICOLON,';',1,191)
   yacc.py: 445:Action : Shift and goto state 18
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE Variable SEMICOLON . LexToken(INT,'int',1,193)
   yacc.py: 471:Action : Reduce rule [VariableDeclaration -> Variable SEMICOLON] with [None,';'] and goto state 83
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VariableDeclaration . LexToken(INT,'int',1,193)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VariableDeclaration INT . LexToken(ID,'total',1,197)
   yacc.py: 471:Action : Reduce rule [Type -> INT] with ['int'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VariableDeclaration Type . LexToken(ID,'total',1,197)
   yacc.py: 445:Action : Shift and goto state 58
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VariableDeclaration Type ID . LexToken(SEMICOLON,';',1,202)
   yacc.py: 471:Action : Reduce rule [Variable -> Type ID] with [None,'total'] and goto state 7
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VariableDeclaration Variable . LexToken(SEMICOLON,';',1,202)
   yacc.py: 445:Action : Shift and goto state 18
   yacc.py: 410:
   yacc.py: 411:State  : 18
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VariableDeclaration Variable SEMICOLON . LexToken(PRINTLN,'println',1,204)
   yacc.py: 471:Action : Reduce rule [VariableDeclaration -> Variable SEMICOLON] with [None,';'] and goto state 83
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 83
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VariableDeclaration VariableDeclaration . LexToken(PRINTLN,'println',1,204)
   yacc.py: 471:Action : Reduce rule [VaribleDeclarations -> VariableDeclaration] with [None] and goto state 133
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 133
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VariableDeclaration VaribleDeclarations . LexToken(PRINTLN,'println',1,204)
   yacc.py: 471:Action : Reduce rule [VaribleDeclarations -> VariableDeclaration VaribleDeclarations] with [None,None] and goto state 80
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 80
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations . LexToken(PRINTLN,'println',1,204)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN . LexToken(LEFTPAREN,'(',1,212)
   yacc.py: 445:Action : Shift and goto state 169
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN . LexToken(STRINGCONSTANT,'"factorial of 10 is"',1,213)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN STRINGCONSTANT . LexToken(COMMA,',',1,233)
   yacc.py: 471:Action : Reduce rule [Constant -> STRINGCONSTANT] with [<str @ 0x7fe75593aa08>] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Constant . LexToken(COMMA,',',1,233)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression . LexToken(COMMA,',',1,233)
   yacc.py: 445:Action : Shift and goto state 215
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA . LexToken(ID,'fact',1,235)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ID . LexToken(LEFTPAREN,'(',1,240)
   yacc.py: 445:Action : Shift and goto state 154
   yacc.py: 410:
   yacc.py: 411:State  : 154
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ID LEFTPAREN . LexToken(INTCONSTANT,'10',1,241)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ID LEFTPAREN INTCONSTANT . LexToken(RIGHTPAREN,')',1,243)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['10'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ID LEFTPAREN Constant . LexToken(RIGHTPAREN,')',1,243)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ID LEFTPAREN Expression . LexToken(RIGHTPAREN,')',1,243)
   yacc.py: 471:Action : Reduce rule [ExpressionList -> Expression] with [None] and goto state 189
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 116
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ID LEFTPAREN ExpressionList . LexToken(RIGHTPAREN,')',1,243)
   yacc.py: 471:Action : Reduce rule [Actuals -> ExpressionList] with [None] and goto state 187
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 187
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ID LEFTPAREN Actuals . LexToken(RIGHTPAREN,')',1,243)
   yacc.py: 445:Action : Shift and goto state 214
   yacc.py: 410:
   yacc.py: 411:State  : 214
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ID LEFTPAREN Actuals RIGHTPAREN . LexToken(COMMA,',',1,244)
   yacc.py: 471:Action : Reduce rule [Call -> ID LEFTPAREN Actuals RIGHTPAREN] with ['fact','(',None,')'] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA Call . LexToken(COMMA,',',1,244)
   yacc.py: 471:Action : Reduce rule [Expression -> Call] with [None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA Expression . LexToken(COMMA,',',1,244)
   yacc.py: 445:Action : Shift and goto state 215
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA Expression COMMA . LexToken(STRINGCONSTANT,'"from the recursive function"',1,246)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA Expression COMMA STRINGCONSTANT . LexToken(RIGHTPAREN,')',1,275)
   yacc.py: 471:Action : Reduce rule [Constant -> STRINGCONSTANT] with [<str @ 0x7fe755ece2b0>] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA Expression COMMA Constant . LexToken(RIGHTPAREN,')',1,275)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA Expression COMMA Expression . LexToken(RIGHTPAREN,')',1,275)
   yacc.py: 471:Action : Reduce rule [ExpressionList -> Expression] with [None] and goto state 230
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 430:Defaulted state 230: Reduce using 76
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA Expression COMMA ExpressionList . LexToken(RIGHTPAREN,')',1,275)
   yacc.py: 471:Action : Reduce rule [ExpressionList -> Expression COMMA ExpressionList] with [None,',',None] and goto state 230
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 430:Defaulted state 230: Reduce using 76
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN Expression COMMA ExpressionList . LexToken(RIGHTPAREN,')',1,275)
   yacc.py: 471:Action : Reduce rule [ExpressionList -> Expression COMMA ExpressionList] with [None,',',None] and goto state 203
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN ExpressionList . LexToken(RIGHTPAREN,')',1,275)
   yacc.py: 445:Action : Shift and goto state 223
   yacc.py: 410:
   yacc.py: 411:State  : 223
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN ExpressionList RIGHTPAREN . LexToken(SEMICOLON,';',1,276)
   yacc.py: 445:Action : Shift and goto state 237
   yacc.py: 410:
   yacc.py: 411:State  : 237
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON . LexToken(ID,'total',1,278)
   yacc.py: 471:Action : Reduce rule [PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON] with ['println','(',None,')',';'] and goto state 92
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations PrintStatement . LexToken(ID,'total',1,278)
   yacc.py: 471:Action : Reduce rule [Statement -> PrintStatement] with [None] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement . LexToken(ID,'total',1,278)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement ID . LexToken(ASSIGNOP,'=',1,284)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['total'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement LValue . LexToken(ASSIGNOP,'=',1,284)
   yacc.py: 445:Action : Shift and goto state 155
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement LValue ASSIGNOP . LexToken(INTCONSTANT,'1',1,286)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement LValue ASSIGNOP INTCONSTANT . LexToken(SEMICOLON,';',1,287)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement LValue ASSIGNOP Constant . LexToken(SEMICOLON,';',1,287)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 191
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement LValue ASSIGNOP Expression . LexToken(SEMICOLON,';',1,287)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue ASSIGNOP Expression] with [None,'=',None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Expression . LexToken(SEMICOLON,';',1,287)
   yacc.py: 445:Action : Shift and goto state 135
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Expression SEMICOLON . LexToken(ID,'x',1,289)
   yacc.py: 471:Action : Reduce rule [Statement -> Expression SEMICOLON] with [None,';'] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement . LexToken(ID,'x',1,289)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement ID . LexToken(ASSIGNOP,'=',1,291)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement LValue . LexToken(ASSIGNOP,'=',1,291)
   yacc.py: 445:Action : Shift and goto state 155
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement LValue ASSIGNOP . LexToken(INTCONSTANT,'1',1,293)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement LValue ASSIGNOP INTCONSTANT . LexToken(SEMICOLON,';',1,294)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement LValue ASSIGNOP Constant . LexToken(SEMICOLON,';',1,294)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 191
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement LValue ASSIGNOP Expression . LexToken(SEMICOLON,';',1,294)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue ASSIGNOP Expression] with [None,'=',None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Expression . LexToken(SEMICOLON,';',1,294)
   yacc.py: 445:Action : Shift and goto state 135
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Expression SEMICOLON . LexToken(FOR,'for',1,296)
   yacc.py: 471:Action : Reduce rule [Statement -> Expression SEMICOLON] with [None,';'] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement . LexToken(FOR,'for',1,296)
   yacc.py: 445:Action : Shift and goto state 108
   yacc.py: 410:
   yacc.py: 411:State  : 108
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR . LexToken(LEFTPAREN,'(',1,300)
   yacc.py: 445:Action : Shift and goto state 165
   yacc.py: 410:
   yacc.py: 411:State  : 165
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN . LexToken(SEMICOLON,';',1,302)
   yacc.py: 445:Action : Shift and goto state 201
   yacc.py: 410:
   yacc.py: 411:State  : 201
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON . LexToken(ID,'x',1,304)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON ID . LexToken(LESSEQUAL,'<=',1,305)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON LValue . LexToken(LESSEQUAL,'<=',1,305)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 222
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression . LexToken(LESSEQUAL,'<=',1,305)
   yacc.py: 445:Action : Shift and goto state 145
   yacc.py: 410:
   yacc.py: 411:State  : 145
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression LESSEQUAL . LexToken(INTCONSTANT,'10',1,307)
   yacc.py: 471:Action : Reduce rule [CompareOperator -> LESSEQUAL] with ['<='] and goto state 137
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression CompareOperator . LexToken(INTCONSTANT,'10',1,307)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression CompareOperator INTCONSTANT . LexToken(SEMICOLON,';',1,309)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['10'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression CompareOperator Constant . LexToken(SEMICOLON,';',1,309)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 183
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression CompareOperator Expression . LexToken(SEMICOLON,';',1,309)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression CompareOperator Expression] with [None,None,None] and goto state 222
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 222
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression . LexToken(SEMICOLON,';',1,309)
   yacc.py: 445:Action : Shift and goto state 236
   yacc.py: 410:
   yacc.py: 411:State  : 236
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON . LexToken(RIGHTPAREN,')',1,311)
   yacc.py: 445:Action : Shift and goto state 244
   yacc.py: 410:
   yacc.py: 411:State  : 244
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN . LexToken(LEFTBRACE,'{',1,313)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE . LexToken(ID,'total',1,315)
   yacc.py: 445:Action : Shift and goto state 94
   yacc.py: 410:
   yacc.py: 411:State  : 94
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE ID . LexToken(ASSIGNOP,'=',1,321)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['total'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue . LexToken(ASSIGNOP,'=',1,321)
   yacc.py: 445:Action : Shift and goto state 155
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP . LexToken(ID,'total',1,323)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP ID . LexToken(MULTIPLICATION,'*',1,329)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['total'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP LValue . LexToken(MULTIPLICATION,'*',1,329)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 191
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP Expression . LexToken(MULTIPLICATION,'*',1,329)
   yacc.py: 445:Action : Shift and goto state 141
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP Expression MULTIPLICATION . LexToken(ID,'x',1,331)
   yacc.py: 471:Action : Reduce rule [ArithmaticOperator -> MULTIPLICATION] with ['*'] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP Expression ArithmaticOperator . LexToken(ID,'x',1,331)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP Expression ArithmaticOperator ID . LexToken(SEMICOLON,';',1,332)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP Expression ArithmaticOperator LValue . LexToken(SEMICOLON,';',1,332)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 182
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 182
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP Expression ArithmaticOperator Expression . LexToken(SEMICOLON,';',1,332)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression ArithmaticOperator Expression] with [None,None,None] and goto state 191
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE LValue ASSIGNOP Expression . LexToken(SEMICOLON,';',1,332)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue ASSIGNOP Expression] with [None,'=',None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Expression . LexToken(SEMICOLON,';',1,332)
   yacc.py: 445:Action : Shift and goto state 135
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Expression SEMICOLON . LexToken(ID,'x',1,334)
   yacc.py: 471:Action : Reduce rule [Statement -> Expression SEMICOLON] with [None,';'] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement . LexToken(ID,'x',1,334)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement ID . LexToken(ASSIGNOP,'=',1,336)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue . LexToken(ASSIGNOP,'=',1,336)
   yacc.py: 445:Action : Shift and goto state 155
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP . LexToken(ID,'x',1,338)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP ID . LexToken(PLUS,'+',1,340)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP LValue . LexToken(PLUS,'+',1,340)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 191
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP Expression . LexToken(PLUS,'+',1,340)
   yacc.py: 445:Action : Shift and goto state 139
   yacc.py: 410:
   yacc.py: 411:State  : 139
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP Expression PLUS . LexToken(INTCONSTANT,'1',1,342)
   yacc.py: 471:Action : Reduce rule [ArithmaticOperator -> PLUS] with ['+'] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP Expression ArithmaticOperator . LexToken(INTCONSTANT,'1',1,342)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP Expression ArithmaticOperator INTCONSTANT . LexToken(SEMICOLON,';',1,343)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP Expression ArithmaticOperator Constant . LexToken(SEMICOLON,';',1,343)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 182
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 182
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP Expression ArithmaticOperator Expression . LexToken(SEMICOLON,';',1,343)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression ArithmaticOperator Expression] with [None,None,None] and goto state 191
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 191
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement LValue ASSIGNOP Expression . LexToken(SEMICOLON,';',1,343)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue ASSIGNOP Expression] with [None,'=',None] and goto state 86
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 86
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement Expression . LexToken(SEMICOLON,';',1,343)
   yacc.py: 445:Action : Shift and goto state 135
   yacc.py: 410:
   yacc.py: 411:State  : 135
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement Expression SEMICOLON . LexToken(RIGHTBRACE,'}',1,345)
   yacc.py: 471:Action : Reduce rule [Statement -> Expression SEMICOLON] with [None,';'] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement Statement . LexToken(RIGHTBRACE,'}',1,345)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement] with [None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 430:Defaulted state 134: Reduce using 54
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statement Statements . LexToken(RIGHTBRACE,'}',1,345)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement Statements] with [None,None] and goto state 81
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statements . LexToken(RIGHTBRACE,'}',1,345)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN LEFTBRACE Statements RIGHTBRACE . LexToken(PRINTLN,'println',1,347)
   yacc.py: 471:Action : Reduce rule [StatementBlock -> LEFTBRACE Statements RIGHTBRACE] with ['{',None,'}'] and goto state 93
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 93
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN StatementBlock . LexToken(PRINTLN,'println',1,347)
   yacc.py: 471:Action : Reduce rule [Statement -> StatementBlock] with [None] and goto state 249
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 249
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN Statement . LexToken(PRINTLN,'println',1,347)
   yacc.py: 471:Action : Reduce rule [ForStatement -> FOR LEFTPAREN SEMICOLON Expression SEMICOLON RIGHTPAREN Statement] with ['for','(',';',None,';',')',None] and goto state 89
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement ForStatement . LexToken(PRINTLN,'println',1,347)
   yacc.py: 471:Action : Reduce rule [Statement -> ForStatement] with [None] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement . LexToken(PRINTLN,'println',1,347)
   yacc.py: 445:Action : Shift and goto state 111
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN . LexToken(LEFTPAREN,'(',1,355)
   yacc.py: 445:Action : Shift and goto state 169
   yacc.py: 410:
   yacc.py: 411:State  : 169
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN . LexToken(STRINGCONSTANT,'"iterative result of 10! is "',1,356)
   yacc.py: 445:Action : Shift and goto state 113
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN STRINGCONSTANT . LexToken(COMMA,',',1,385)
   yacc.py: 471:Action : Reduce rule [Constant -> STRINGCONSTANT] with [<str @ 0x7fe755ece2b0>] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN Constant . LexToken(COMMA,',',1,385)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN Expression . LexToken(COMMA,',',1,385)
   yacc.py: 445:Action : Shift and goto state 215
   yacc.py: 410:
   yacc.py: 411:State  : 215
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN Expression COMMA . LexToken(ID,'total',1,387)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN Expression COMMA ID . LexToken(RIGHTPAREN,')',1,392)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['total'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN Expression COMMA LValue . LexToken(RIGHTPAREN,')',1,392)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN Expression COMMA Expression . LexToken(RIGHTPAREN,')',1,392)
   yacc.py: 471:Action : Reduce rule [ExpressionList -> Expression] with [None] and goto state 230
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 430:Defaulted state 230: Reduce using 76
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN Expression COMMA ExpressionList . LexToken(RIGHTPAREN,')',1,392)
   yacc.py: 471:Action : Reduce rule [ExpressionList -> Expression COMMA ExpressionList] with [None,',',None] and goto state 203
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN ExpressionList . LexToken(RIGHTPAREN,')',1,392)
   yacc.py: 445:Action : Shift and goto state 223
   yacc.py: 410:
   yacc.py: 411:State  : 223
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN ExpressionList RIGHTPAREN . LexToken(SEMICOLON,';',1,393)
   yacc.py: 445:Action : Shift and goto state 237
   yacc.py: 410:
   yacc.py: 411:State  : 237
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON . LexToken(RIGHTBRACE,'}',1,395)
   yacc.py: 471:Action : Reduce rule [PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON] with ['println','(',None,')',';'] and goto state 92
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement PrintStatement . LexToken(RIGHTBRACE,'}',1,395)
   yacc.py: 471:Action : Reduce rule [Statement -> PrintStatement] with [None] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement Statement . LexToken(RIGHTBRACE,'}',1,395)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement] with [None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 430:Defaulted state 134: Reduce using 54
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statement Statements . LexToken(RIGHTBRACE,'}',1,395)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement Statements] with [None,None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 430:Defaulted state 134: Reduce using 54
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statement Statements . LexToken(RIGHTBRACE,'}',1,395)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement Statements] with [None,None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 430:Defaulted state 134: Reduce using 54
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statement Statements . LexToken(RIGHTBRACE,'}',1,395)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement Statements] with [None,None] and goto state 134
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 134
   yacc.py: 430:Defaulted state 134: Reduce using 54
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statement Statements . LexToken(RIGHTBRACE,'}',1,395)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement Statements] with [None,None] and goto state 129
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 129
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statements . LexToken(RIGHTBRACE,'}',1,395)
   yacc.py: 445:Action : Shift and goto state 180
   yacc.py: 410:
   yacc.py: 411:State  : 180
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN LEFTBRACE VaribleDeclarations Statements RIGHTBRACE . $end
   yacc.py: 471:Action : Reduce rule [StatementBlock -> LEFTBRACE VaribleDeclarations Statements RIGHTBRACE] with ['{',None,None,'}'] and goto state 67
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 67
   yacc.py: 435:Stack  : Declaration VOID ID LEFTPAREN RIGHTPAREN StatementBlock . $end
   yacc.py: 471:Action : Reduce rule [FunctionDeclaration -> VOID ID LEFTPAREN RIGHTPAREN StatementBlock] with ['void','main','(',')',None] and goto state 4
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 435:Stack  : Declaration FunctionDeclaration . $end
   yacc.py: 471:Action : Reduce rule [Declaration -> FunctionDeclaration] with [None] and goto state 2
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : Declaration Declaration . $end
   yacc.py: 471:Action : Reduce rule [Program -> Declaration] with [None] and goto state 17
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 430:Defaulted state 17: Reduce using 1
   yacc.py: 435:Stack  : Declaration Program . $end
   yacc.py: 471:Action : Reduce rule [Program -> Declaration Program] with [None,None] and goto state 1
   yacc.py: 506:Result : <NoneType @ 0x9d4380> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : Program . $end
   yacc.py: 571:Done   : Returning <NoneType @ 0x9d4380> (None)
   yacc.py: 572:PLY: PARSE DEBUG END
