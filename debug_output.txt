   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(INT,'int',1,0)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : INT . LexToken(ID,'fact',1,4)
   yacc.py: 471:Action : Reduce rule [Type -> INT] with ['int'] and goto state 8
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 8
   yacc.py: 435:Stack  : Type . LexToken(ID,'fact',1,4)
   yacc.py: 445:Action : Shift and goto state 19
   yacc.py: 410:
   yacc.py: 411:State  : 19
   yacc.py: 435:Stack  : Type ID . LexToken(LEFTPAREN,'(',1,9)
   yacc.py: 445:Action : Shift and goto state 26
   yacc.py: 410:
   yacc.py: 411:State  : 26
   yacc.py: 435:Stack  : Type ID LEFTPAREN . LexToken(INT,'int',1,10)
   yacc.py: 445:Action : Shift and goto state 13
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 435:Stack  : Type ID LEFTPAREN INT . LexToken(ID,'x',1,14)
   yacc.py: 471:Action : Reduce rule [Type -> INT] with ['int'] and goto state 35
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 35
   yacc.py: 435:Stack  : Type ID LEFTPAREN Type . LexToken(ID,'x',1,14)
   yacc.py: 445:Action : Shift and goto state 58
   yacc.py: 410:
   yacc.py: 411:State  : 58
   yacc.py: 435:Stack  : Type ID LEFTPAREN Type ID . LexToken(RIGHTPAREN,')',1,15)
   yacc.py: 471:Action : Reduce rule [Variable -> Type ID] with [None,'x'] and goto state 39
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 39
   yacc.py: 435:Stack  : Type ID LEFTPAREN Variable . LexToken(RIGHTPAREN,')',1,15)
   yacc.py: 471:Action : Reduce rule [Formals -> Variable] with [None] and goto state 37
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 37
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals . LexToken(RIGHTPAREN,')',1,15)
   yacc.py: 445:Action : Shift and goto state 60
   yacc.py: 410:
   yacc.py: 411:State  : 60
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN . LexToken(LEFTBRACE,'{',1,17)
   yacc.py: 445:Action : Shift and goto state 62
   yacc.py: 410:
   yacc.py: 411:State  : 62
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE . LexToken(IF,'if',1,51)
   yacc.py: 445:Action : Shift and goto state 106
   yacc.py: 410:
   yacc.py: 411:State  : 106
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF . LexToken(LEFTPAREN,'(',1,54)
   yacc.py: 445:Action : Shift and goto state 163
   yacc.py: 410:
   yacc.py: 411:State  : 163
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN . LexToken(ID,'x',1,55)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN ID . LexToken(GREATER,'>',1,56)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN LValue . LexToken(GREATER,'>',1,56)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 198
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression . LexToken(GREATER,'>',1,56)
   yacc.py: 445:Action : Shift and goto state 146
   yacc.py: 410:
   yacc.py: 411:State  : 146
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression GREATER . LexToken(INTCONSTANT,'1',1,57)
   yacc.py: 471:Action : Reduce rule [CompareOperator -> GREATER] with ['>'] and goto state 137
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 137
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression CompareOperator . LexToken(INTCONSTANT,'1',1,57)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression CompareOperator INTCONSTANT . LexToken(RIGHTPAREN,')',1,58)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression CompareOperator Constant . LexToken(RIGHTPAREN,')',1,58)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 183
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 183
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression CompareOperator Expression . LexToken(RIGHTPAREN,')',1,58)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression CompareOperator Expression] with [None,None,None] and goto state 198
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 198
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression . LexToken(RIGHTPAREN,')',1,58)
   yacc.py: 445:Action : Shift and goto state 219
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN . LexToken(RETURN,'return',1,60)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN . LexToken(ID,'x',1,67)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN ID . LexToken(MULTIPLICATION,'*',1,69)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN LValue . LexToken(MULTIPLICATION,'*',1,69)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 167
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression . LexToken(MULTIPLICATION,'*',1,69)
   yacc.py: 445:Action : Shift and goto state 141
   yacc.py: 410:
   yacc.py: 411:State  : 141
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression MULTIPLICATION . LexToken(ID,'fact',1,71)
   yacc.py: 471:Action : Reduce rule [ArithmaticOperator -> MULTIPLICATION] with ['*'] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator . LexToken(ID,'fact',1,71)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID . LexToken(LEFTPAREN,'(',1,75)
   yacc.py: 445:Action : Shift and goto state 154
   yacc.py: 410:
   yacc.py: 411:State  : 154
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN . LexToken(ID,'x',1,76)
   yacc.py: 445:Action : Shift and goto state 131
   yacc.py: 410:
   yacc.py: 411:State  : 131
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN ID . LexToken(MINUS,'-',1,77)
   yacc.py: 471:Action : Reduce rule [LValue -> ID] with ['x'] and goto state 95
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN LValue . LexToken(MINUS,'-',1,77)
   yacc.py: 471:Action : Reduce rule [Expression -> LValue] with [None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression . LexToken(MINUS,'-',1,77)
   yacc.py: 445:Action : Shift and goto state 140
   yacc.py: 410:
   yacc.py: 411:State  : 140
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression MINUS . LexToken(INTCONSTANT,'1',1,78)
   yacc.py: 471:Action : Reduce rule [ArithmaticOperator -> MINUS] with ['-'] and goto state 136
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 136
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression ArithmaticOperator . LexToken(INTCONSTANT,'1',1,78)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression ArithmaticOperator INTCONSTANT . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression ArithmaticOperator Constant . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 182
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 182
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression ArithmaticOperator Expression . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression ArithmaticOperator Expression] with [None,None,None] and goto state 190
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 190
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Expression . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [ExpressionList -> Expression] with [None] and goto state 189
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 189
   yacc.py: 430:Defaulted state 189: Reduce using 116
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN ExpressionList . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 471:Action : Reduce rule [Actuals -> ExpressionList] with [None] and goto state 187
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 187
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Actuals . LexToken(RIGHTPAREN,')',1,79)
   yacc.py: 445:Action : Shift and goto state 214
   yacc.py: 410:
   yacc.py: 411:State  : 214
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator ID LEFTPAREN Actuals RIGHTPAREN . LexToken(SEMICOLON,';',1,80)
   yacc.py: 471:Action : Reduce rule [Call -> ID LEFTPAREN Actuals RIGHTPAREN] with ['fact','(',None,')'] and goto state 98
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator Call . LexToken(SEMICOLON,';',1,80)
   yacc.py: 471:Action : Reduce rule [Expression -> Call] with [None] and goto state 182
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 182
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression ArithmaticOperator Expression . LexToken(SEMICOLON,';',1,80)
   yacc.py: 471:Action : Reduce rule [Expression -> Expression ArithmaticOperator Expression] with [None,None,None] and goto state 167
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression . LexToken(SEMICOLON,';',1,80)
   yacc.py: 445:Action : Shift and goto state 202
   yacc.py: 410:
   yacc.py: 411:State  : 202
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN RETURN Expression SEMICOLON . LexToken(ELSE,'else',1,82)
   yacc.py: 471:Action : Reduce rule [ReturnStatement -> RETURN Expression SEMICOLON] with ['return',None,';'] and goto state 91
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN ReturnStatement . LexToken(ELSE,'else',1,82)
   yacc.py: 471:Action : Reduce rule [Statement -> ReturnStatement] with [None] and goto state 233
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 233
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement . LexToken(ELSE,'else',1,82)
   yacc.py: 445:Action : Shift and goto state 241
   yacc.py: 410:
   yacc.py: 411:State  : 241
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE . LexToken(RETURN,'return',1,87)
   yacc.py: 445:Action : Shift and goto state 110
   yacc.py: 410:
   yacc.py: 411:State  : 110
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN . LexToken(INTCONSTANT,'1',1,94)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN INTCONSTANT . LexToken(SEMICOLON,';',1,95)
   yacc.py: 471:Action : Reduce rule [Constant -> INTCONSTANT] with ['1'] and goto state 96
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 96
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN Constant . LexToken(SEMICOLON,';',1,95)
   yacc.py: 471:Action : Reduce rule [Expression -> Constant] with [None] and goto state 167
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 167
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN Expression . LexToken(SEMICOLON,';',1,95)
   yacc.py: 445:Action : Shift and goto state 202
   yacc.py: 410:
   yacc.py: 411:State  : 202
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE RETURN Expression SEMICOLON . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [ReturnStatement -> RETURN Expression SEMICOLON] with ['return',None,';'] and goto state 91
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE ReturnStatement . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [Statement -> ReturnStatement] with [None] and goto state 245
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 245
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IF LEFTPAREN Expression RIGHTPAREN Statement ELSE Statement . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement ELSE Statement] with ['if','(',None,')',None,'else',None] and goto state 87
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 87
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE IfStatement . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [Statement -> IfStatement] with [None] and goto state 84
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 84
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE Statement . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 471:Action : Reduce rule [Statements -> Statement] with [None] and goto state 81
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 81
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE Statements . LexToken(RIGHTBRACE,'}',1,97)
   yacc.py: 445:Action : Shift and goto state 132
   yacc.py: 410:
   yacc.py: 411:State  : 132
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN LEFTBRACE Statements RIGHTBRACE . $end
   yacc.py: 471:Action : Reduce rule [StatementBlock -> LEFTBRACE Statements RIGHTBRACE] with ['{',None,'}'] and goto state 79
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 79
   yacc.py: 435:Stack  : Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock . $end
   yacc.py: 471:Action : Reduce rule [FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock] with [None,'fact','(',None,')',None] and goto state 4
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 435:Stack  : FunctionDeclaration . $end
   yacc.py: 471:Action : Reduce rule [Declaration -> FunctionDeclaration] with [None] and goto state 2
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : Declaration . $end
   yacc.py: 471:Action : Reduce rule [Program -> Declaration] with [None] and goto state 1
   yacc.py: 506:Result : <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : Program . $end
   yacc.py: 571:Done   : Returning <NoneType @ 0x56311052fdc0> (None)
   yacc.py: 572:PLY: PARSE DEBUG END
