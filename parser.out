Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Program Declaration
Rule 2     Program -> Declaration
Rule 3     Declaration -> VariableDeclaration
Rule 4     Declaration -> FunctionDeclaration
Rule 5     Declaration -> ClassDeclaration
Rule 6     Declaration -> InterfaceDeclaration
Rule 7     VariableDeclaration -> Variable
Rule 8     Variable -> Type ID
Rule 9     Type -> INT
Rule 10    Type -> DOUBLE
Rule 11    Type -> BOOLEAN
Rule 12    Type -> STRING
Rule 13    Type -> Type LEFTBRACKET RIGHTBRACKET
Rule 14    Type -> ID
Rule 15    FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock
Rule 16    FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock
Rule 17    Formals -> VariableList
Rule 18    Formals -> empty
Rule 19    VariableList -> Variable COMMA VariableList
Rule 20    VariableList -> Variable
Rule 21    ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE
Rule 22    ClassOptions -> EXTENDS ID
Rule 23    ClassOptions -> IMPLEMENTS IdList
Rule 24    ClassOptions -> EXTENDS ID IMPLEMENTS IdList
Rule 25    ClassOptions -> empty
Rule 26    IdList -> ID COMMA IdList
Rule 27    IdList -> ID
Rule 28    FieldKleene -> Field FieldKleene
Rule 29    FieldKleene -> empty
Rule 30    Field -> VariableDeclaration
Rule 31    Field -> FunctionDeclaration
Rule 32    InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE
Rule 33    PrototypeKleene -> Prototype PrototypeKleene
Rule 34    PrototypeKleene -> empty
Rule 35    Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON
Rule 36    Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON
Rule 37    StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE
Rule 38    VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene
Rule 39    VaribleDeclarationKleene -> empty
Rule 40    StatementKleene -> Statement StatementKleene
Rule 41    StatementKleene -> empty
Rule 42    Statement -> Expression SEMICOLON
Rule 43    Statement -> SEMICOLON
Rule 44    Statement -> IfStatement
Rule 45    Statement -> WhileStatement
Rule 46    Statement -> ForStatement
Rule 47    Statement -> BreakStatement
Rule 48    Statement -> ReturnStatement
Rule 49    Statement -> PrintStatement
Rule 50    Statement -> StatementBlock
Rule 51    IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse
Rule 52    OptionalElse -> ELSE Statement
Rule 53    OptionalElse -> empty
Rule 54    WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement
Rule 55    ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
Rule 56    OptionalExpression -> Expression
Rule 57    OptionalExpression -> empty
Rule 58    BreakStatement -> BREAK SEMICOLON
Rule 59    ReturnStatement -> RETURN OptionalExpression SEMICOLON
Rule 60    PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON
Rule 61    ExpressionList -> Expression COMMA ExpressionList
Rule 62    ExpressionList -> Expression
Rule 63    Expression -> LVal ASSIGNOP Expression
Rule 64    Expression -> Constant
Rule 65    Expression -> LVal
Rule 66    Expression -> THIS
Rule 67    Expression -> Call
Rule 68    Expression -> LEFTPAREN Expression RIGHTPAREN
Rule 69    Expression -> MINUS Expression
Rule 70    Expression -> Expression ArithmaticOperator Expression
Rule 71    Expression -> Expression CompareOperator Expression
Rule 72    Expression -> Expression LogicalOperator Expression
Rule 73    Expression -> NOT Expression
Rule 74    Expression -> READLN LEFTPAREN RIGHTPAREN
Rule 75    Expression -> NEW LEFTPAREN ID RIGHTPAREN
Rule 76    Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
Rule 77    ArithmaticOperator -> PLUS
Rule 78    ArithmaticOperator -> MINUS
Rule 79    ArithmaticOperator -> MULTIPLICATION
Rule 80    ArithmaticOperator -> DIVISION
Rule 81    ArithmaticOperator -> MOD
Rule 82    CompareOperator -> LESS
Rule 83    CompareOperator -> LESSEQUAL
Rule 84    CompareOperator -> GREATER
Rule 85    CompareOperator -> GREATEREQUAL
Rule 86    CompareOperator -> EQUAL
Rule 87    CompareOperator -> NOTEQUAL
Rule 88    LogicalOperator -> AND
Rule 89    LogicalOperator -> OR
Rule 90    LVal -> ID
Rule 91    LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET
Rule 92    LVal -> LVal PERIOD ID
Rule 93    Call -> ID LEFTPAREN Actuals RIGHTPAREN
Rule 94    Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN
Rule 95    Actuals -> ExpressionList
Rule 96    Actuals -> empty
Rule 97    Constant -> INTCONSTANT
Rule 98    Constant -> DOUBLECONSTANT
Rule 99    Constant -> STRINGCONSTANT
Rule 100   Constant -> BOOLEANCONSTANT
Rule 101   Constant -> NULL
Rule 102   empty -> <empty>

Terminals, with rules where they appear

AND                  : 88
ASSIGNOP             : 63
BOOLEAN              : 11
BOOLEANCONSTANT      : 100
BREAK                : 58
CLASS                : 21
COMMA                : 19 26 61 76
DIVISION             : 80
DOUBLE               : 10
DOUBLECONSTANT       : 98
ELSE                 : 52
EQUAL                : 86
EXTENDS              : 22 24
FOR                  : 55
GREATER              : 84
GREATEREQUAL         : 85
ID                   : 8 14 15 16 21 22 24 26 27 32 35 36 75 90 92 93 94 94
IF                   : 51
IMPLEMENTS           : 23 24
INT                  : 9
INTCONSTANT          : 76 97
INTERFACE            : 32
LEFTBRACE            : 21 32 37
LEFTBRACKET          : 13 91
LEFTPAREN            : 15 16 35 36 51 54 55 60 68 74 75 76 93 94
LESS                 : 82
LESSEQUAL            : 83
MINUS                : 69 78
MOD                  : 81
MULTIPLICATION       : 79
NEW                  : 75
NEWARRAY             : 76
NOT                  : 73
NOTEQUAL             : 87
NULL                 : 101
OR                   : 89
PERIOD               : 92 94
PLUS                 : 77
PRINTLN              : 60
READLN               : 74
RETURN               : 59
RIGHTBRACE           : 21 32 37
RIGHTBRACKET         : 13 91
RIGHTPAREN           : 15 16 35 36 51 54 55 60 68 74 75 76 93 94
SEMICOLON            : 35 36 42 43 55 55 58 59 60
STRING               : 12
STRINGCONSTANT       : 99
THIS                 : 66
VOID                 : 16 36
WHILE                : 54
error                : 

Nonterminals, with rules where they appear

Actuals              : 93 94
ArithmaticOperator   : 70
BreakStatement       : 47
Call                 : 67
ClassDeclaration     : 5
ClassOptions         : 21
CompareOperator      : 71
Constant             : 64
Declaration          : 1 2
Expression           : 42 51 54 55 56 61 62 63 68 69 70 70 71 71 72 72 73 91
ExpressionList       : 60 61 95
Field                : 28
FieldKleene          : 21 28
ForStatement         : 46
Formals              : 15 16 35 36
FunctionDeclaration  : 4 31
IdList               : 23 24 26
IfStatement          : 44
InterfaceDeclaration : 6
LVal                 : 63 65 91 92
LogicalOperator      : 72
OptionalElse         : 51
OptionalExpression   : 55 55 59
PrintStatement       : 49
Program              : 1 0
Prototype            : 33
PrototypeKleene      : 32 33
ReturnStatement      : 48
Statement            : 40 51 52 54 55
StatementBlock       : 15 16 50
StatementKleene      : 37 40
Type                 : 8 13 15 35 76
Variable             : 7 19 20
VariableDeclaration  : 3 30 38
VariableList         : 17 19
VaribleDeclarationKleene : 37 38
WhileStatement       : 45
empty                : 18 25 29 34 39 41 53 57 96

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Program Declaration
    (2) Program -> . Declaration
    (3) Declaration -> . VariableDeclaration
    (4) Declaration -> . FunctionDeclaration
    (5) Declaration -> . ClassDeclaration
    (6) Declaration -> . InterfaceDeclaration
    (7) VariableDeclaration -> . Variable
    (15) FunctionDeclaration -> . Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (16) FunctionDeclaration -> . VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (21) ClassDeclaration -> . CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE
    (32) InterfaceDeclaration -> . INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    VOID            shift and go to state 10
    CLASS           shift and go to state 11
    INTERFACE       shift and go to state 12
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Program                        shift and go to state 1
    Declaration                    shift and go to state 2
    VariableDeclaration            shift and go to state 3
    FunctionDeclaration            shift and go to state 4
    ClassDeclaration               shift and go to state 5
    InterfaceDeclaration           shift and go to state 6
    Variable                       shift and go to state 7
    Type                           shift and go to state 8

state 1

    (0) S' -> Program .
    (1) Program -> Program . Declaration
    (3) Declaration -> . VariableDeclaration
    (4) Declaration -> . FunctionDeclaration
    (5) Declaration -> . ClassDeclaration
    (6) Declaration -> . InterfaceDeclaration
    (7) VariableDeclaration -> . Variable
    (15) FunctionDeclaration -> . Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (16) FunctionDeclaration -> . VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (21) ClassDeclaration -> . CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE
    (32) InterfaceDeclaration -> . INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    VOID            shift and go to state 10
    CLASS           shift and go to state 11
    INTERFACE       shift and go to state 12
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Declaration                    shift and go to state 17
    VariableDeclaration            shift and go to state 3
    FunctionDeclaration            shift and go to state 4
    ClassDeclaration               shift and go to state 5
    InterfaceDeclaration           shift and go to state 6
    Variable                       shift and go to state 7
    Type                           shift and go to state 8

state 2

    (2) Program -> Declaration .

    VOID            reduce using rule 2 (Program -> Declaration .)
    CLASS           reduce using rule 2 (Program -> Declaration .)
    INTERFACE       reduce using rule 2 (Program -> Declaration .)
    INT             reduce using rule 2 (Program -> Declaration .)
    DOUBLE          reduce using rule 2 (Program -> Declaration .)
    BOOLEAN         reduce using rule 2 (Program -> Declaration .)
    STRING          reduce using rule 2 (Program -> Declaration .)
    ID              reduce using rule 2 (Program -> Declaration .)
    $end            reduce using rule 2 (Program -> Declaration .)


state 3

    (3) Declaration -> VariableDeclaration .

    VOID            reduce using rule 3 (Declaration -> VariableDeclaration .)
    CLASS           reduce using rule 3 (Declaration -> VariableDeclaration .)
    INTERFACE       reduce using rule 3 (Declaration -> VariableDeclaration .)
    INT             reduce using rule 3 (Declaration -> VariableDeclaration .)
    DOUBLE          reduce using rule 3 (Declaration -> VariableDeclaration .)
    BOOLEAN         reduce using rule 3 (Declaration -> VariableDeclaration .)
    STRING          reduce using rule 3 (Declaration -> VariableDeclaration .)
    ID              reduce using rule 3 (Declaration -> VariableDeclaration .)
    $end            reduce using rule 3 (Declaration -> VariableDeclaration .)


state 4

    (4) Declaration -> FunctionDeclaration .

    VOID            reduce using rule 4 (Declaration -> FunctionDeclaration .)
    CLASS           reduce using rule 4 (Declaration -> FunctionDeclaration .)
    INTERFACE       reduce using rule 4 (Declaration -> FunctionDeclaration .)
    INT             reduce using rule 4 (Declaration -> FunctionDeclaration .)
    DOUBLE          reduce using rule 4 (Declaration -> FunctionDeclaration .)
    BOOLEAN         reduce using rule 4 (Declaration -> FunctionDeclaration .)
    STRING          reduce using rule 4 (Declaration -> FunctionDeclaration .)
    ID              reduce using rule 4 (Declaration -> FunctionDeclaration .)
    $end            reduce using rule 4 (Declaration -> FunctionDeclaration .)


state 5

    (5) Declaration -> ClassDeclaration .

    VOID            reduce using rule 5 (Declaration -> ClassDeclaration .)
    CLASS           reduce using rule 5 (Declaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 5 (Declaration -> ClassDeclaration .)
    INT             reduce using rule 5 (Declaration -> ClassDeclaration .)
    DOUBLE          reduce using rule 5 (Declaration -> ClassDeclaration .)
    BOOLEAN         reduce using rule 5 (Declaration -> ClassDeclaration .)
    STRING          reduce using rule 5 (Declaration -> ClassDeclaration .)
    ID              reduce using rule 5 (Declaration -> ClassDeclaration .)
    $end            reduce using rule 5 (Declaration -> ClassDeclaration .)


state 6

    (6) Declaration -> InterfaceDeclaration .

    VOID            reduce using rule 6 (Declaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 6 (Declaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 6 (Declaration -> InterfaceDeclaration .)
    INT             reduce using rule 6 (Declaration -> InterfaceDeclaration .)
    DOUBLE          reduce using rule 6 (Declaration -> InterfaceDeclaration .)
    BOOLEAN         reduce using rule 6 (Declaration -> InterfaceDeclaration .)
    STRING          reduce using rule 6 (Declaration -> InterfaceDeclaration .)
    ID              reduce using rule 6 (Declaration -> InterfaceDeclaration .)
    $end            reduce using rule 6 (Declaration -> InterfaceDeclaration .)


state 7

    (7) VariableDeclaration -> Variable .

    VOID            reduce using rule 7 (VariableDeclaration -> Variable .)
    CLASS           reduce using rule 7 (VariableDeclaration -> Variable .)
    INTERFACE       reduce using rule 7 (VariableDeclaration -> Variable .)
    INT             reduce using rule 7 (VariableDeclaration -> Variable .)
    DOUBLE          reduce using rule 7 (VariableDeclaration -> Variable .)
    BOOLEAN         reduce using rule 7 (VariableDeclaration -> Variable .)
    STRING          reduce using rule 7 (VariableDeclaration -> Variable .)
    ID              reduce using rule 7 (VariableDeclaration -> Variable .)
    $end            reduce using rule 7 (VariableDeclaration -> Variable .)
    RIGHTBRACE      reduce using rule 7 (VariableDeclaration -> Variable .)
    SEMICOLON       reduce using rule 7 (VariableDeclaration -> Variable .)
    THIS            reduce using rule 7 (VariableDeclaration -> Variable .)
    LEFTPAREN       reduce using rule 7 (VariableDeclaration -> Variable .)
    MINUS           reduce using rule 7 (VariableDeclaration -> Variable .)
    NOT             reduce using rule 7 (VariableDeclaration -> Variable .)
    READLN          reduce using rule 7 (VariableDeclaration -> Variable .)
    NEW             reduce using rule 7 (VariableDeclaration -> Variable .)
    NEWARRAY        reduce using rule 7 (VariableDeclaration -> Variable .)
    IF              reduce using rule 7 (VariableDeclaration -> Variable .)
    WHILE           reduce using rule 7 (VariableDeclaration -> Variable .)
    FOR             reduce using rule 7 (VariableDeclaration -> Variable .)
    BREAK           reduce using rule 7 (VariableDeclaration -> Variable .)
    RETURN          reduce using rule 7 (VariableDeclaration -> Variable .)
    PRINTLN         reduce using rule 7 (VariableDeclaration -> Variable .)
    LEFTBRACE       reduce using rule 7 (VariableDeclaration -> Variable .)
    INTCONSTANT     reduce using rule 7 (VariableDeclaration -> Variable .)
    DOUBLECONSTANT  reduce using rule 7 (VariableDeclaration -> Variable .)
    STRINGCONSTANT  reduce using rule 7 (VariableDeclaration -> Variable .)
    BOOLEANCONSTANT reduce using rule 7 (VariableDeclaration -> Variable .)
    NULL            reduce using rule 7 (VariableDeclaration -> Variable .)


state 8

    (15) FunctionDeclaration -> Type . ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (8) Variable -> Type . ID
    (13) Type -> Type . LEFTBRACKET RIGHTBRACKET

    ID              shift and go to state 18
    LEFTBRACKET     shift and go to state 19


state 9

    (14) Type -> ID .

    ID              reduce using rule 14 (Type -> ID .)
    LEFTBRACKET     reduce using rule 14 (Type -> ID .)
    RIGHTPAREN      reduce using rule 14 (Type -> ID .)


state 10

    (16) FunctionDeclaration -> VOID . ID LEFTPAREN Formals RIGHTPAREN StatementBlock

    ID              shift and go to state 20


state 11

    (21) ClassDeclaration -> CLASS . ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE

    ID              shift and go to state 21


state 12

    (32) InterfaceDeclaration -> INTERFACE . ID LEFTBRACE PrototypeKleene RIGHTBRACE

    ID              shift and go to state 22


state 13

    (9) Type -> INT .

    ID              reduce using rule 9 (Type -> INT .)
    LEFTBRACKET     reduce using rule 9 (Type -> INT .)
    RIGHTPAREN      reduce using rule 9 (Type -> INT .)


state 14

    (10) Type -> DOUBLE .

    ID              reduce using rule 10 (Type -> DOUBLE .)
    LEFTBRACKET     reduce using rule 10 (Type -> DOUBLE .)
    RIGHTPAREN      reduce using rule 10 (Type -> DOUBLE .)


state 15

    (11) Type -> BOOLEAN .

    ID              reduce using rule 11 (Type -> BOOLEAN .)
    LEFTBRACKET     reduce using rule 11 (Type -> BOOLEAN .)
    RIGHTPAREN      reduce using rule 11 (Type -> BOOLEAN .)


state 16

    (12) Type -> STRING .

    ID              reduce using rule 12 (Type -> STRING .)
    LEFTBRACKET     reduce using rule 12 (Type -> STRING .)
    RIGHTPAREN      reduce using rule 12 (Type -> STRING .)


state 17

    (1) Program -> Program Declaration .

    VOID            reduce using rule 1 (Program -> Program Declaration .)
    CLASS           reduce using rule 1 (Program -> Program Declaration .)
    INTERFACE       reduce using rule 1 (Program -> Program Declaration .)
    INT             reduce using rule 1 (Program -> Program Declaration .)
    DOUBLE          reduce using rule 1 (Program -> Program Declaration .)
    BOOLEAN         reduce using rule 1 (Program -> Program Declaration .)
    STRING          reduce using rule 1 (Program -> Program Declaration .)
    ID              reduce using rule 1 (Program -> Program Declaration .)
    $end            reduce using rule 1 (Program -> Program Declaration .)


state 18

    (15) FunctionDeclaration -> Type ID . LEFTPAREN Formals RIGHTPAREN StatementBlock
    (8) Variable -> Type ID .

    LEFTPAREN       shift and go to state 23
    VOID            reduce using rule 8 (Variable -> Type ID .)
    CLASS           reduce using rule 8 (Variable -> Type ID .)
    INTERFACE       reduce using rule 8 (Variable -> Type ID .)
    INT             reduce using rule 8 (Variable -> Type ID .)
    DOUBLE          reduce using rule 8 (Variable -> Type ID .)
    BOOLEAN         reduce using rule 8 (Variable -> Type ID .)
    STRING          reduce using rule 8 (Variable -> Type ID .)
    ID              reduce using rule 8 (Variable -> Type ID .)
    $end            reduce using rule 8 (Variable -> Type ID .)
    RIGHTBRACE      reduce using rule 8 (Variable -> Type ID .)


state 19

    (13) Type -> Type LEFTBRACKET . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 24


state 20

    (16) FunctionDeclaration -> VOID ID . LEFTPAREN Formals RIGHTPAREN StatementBlock

    LEFTPAREN       shift and go to state 25


state 21

    (21) ClassDeclaration -> CLASS ID . ClassOptions LEFTBRACE FieldKleene RIGHTBRACE
    (22) ClassOptions -> . EXTENDS ID
    (23) ClassOptions -> . IMPLEMENTS IdList
    (24) ClassOptions -> . EXTENDS ID IMPLEMENTS IdList
    (25) ClassOptions -> . empty
    (102) empty -> .

    EXTENDS         shift and go to state 27
    IMPLEMENTS      shift and go to state 28
    LEFTBRACE       reduce using rule 102 (empty -> .)

    ClassOptions                   shift and go to state 26
    empty                          shift and go to state 29

state 22

    (32) InterfaceDeclaration -> INTERFACE ID . LEFTBRACE PrototypeKleene RIGHTBRACE

    LEFTBRACE       shift and go to state 30


state 23

    (15) FunctionDeclaration -> Type ID LEFTPAREN . Formals RIGHTPAREN StatementBlock
    (17) Formals -> . VariableList
    (18) Formals -> . empty
    (19) VariableList -> . Variable COMMA VariableList
    (20) VariableList -> . Variable
    (102) empty -> .
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    RIGHTPAREN      reduce using rule 102 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Type                           shift and go to state 31
    Formals                        shift and go to state 32
    VariableList                   shift and go to state 33
    empty                          shift and go to state 34
    Variable                       shift and go to state 35

state 24

    (13) Type -> Type LEFTBRACKET RIGHTBRACKET .

    ID              reduce using rule 13 (Type -> Type LEFTBRACKET RIGHTBRACKET .)
    LEFTBRACKET     reduce using rule 13 (Type -> Type LEFTBRACKET RIGHTBRACKET .)
    RIGHTPAREN      reduce using rule 13 (Type -> Type LEFTBRACKET RIGHTBRACKET .)


state 25

    (16) FunctionDeclaration -> VOID ID LEFTPAREN . Formals RIGHTPAREN StatementBlock
    (17) Formals -> . VariableList
    (18) Formals -> . empty
    (19) VariableList -> . Variable COMMA VariableList
    (20) VariableList -> . Variable
    (102) empty -> .
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    RIGHTPAREN      reduce using rule 102 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Formals                        shift and go to state 36
    VariableList                   shift and go to state 33
    empty                          shift and go to state 34
    Variable                       shift and go to state 35
    Type                           shift and go to state 31

state 26

    (21) ClassDeclaration -> CLASS ID ClassOptions . LEFTBRACE FieldKleene RIGHTBRACE

    LEFTBRACE       shift and go to state 37


state 27

    (22) ClassOptions -> EXTENDS . ID
    (24) ClassOptions -> EXTENDS . ID IMPLEMENTS IdList

    ID              shift and go to state 38


state 28

    (23) ClassOptions -> IMPLEMENTS . IdList
    (26) IdList -> . ID COMMA IdList
    (27) IdList -> . ID

    ID              shift and go to state 40

    IdList                         shift and go to state 39

state 29

    (25) ClassOptions -> empty .

    LEFTBRACE       reduce using rule 25 (ClassOptions -> empty .)


state 30

    (32) InterfaceDeclaration -> INTERFACE ID LEFTBRACE . PrototypeKleene RIGHTBRACE
    (33) PrototypeKleene -> . Prototype PrototypeKleene
    (34) PrototypeKleene -> . empty
    (35) Prototype -> . Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON
    (36) Prototype -> . VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON
    (102) empty -> .
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    VOID            shift and go to state 45
    RIGHTBRACE      reduce using rule 102 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    PrototypeKleene                shift and go to state 41
    Prototype                      shift and go to state 42
    empty                          shift and go to state 43
    Type                           shift and go to state 44

state 31

    (8) Variable -> Type . ID
    (13) Type -> Type . LEFTBRACKET RIGHTBRACKET

    ID              shift and go to state 46
    LEFTBRACKET     shift and go to state 19


state 32

    (15) FunctionDeclaration -> Type ID LEFTPAREN Formals . RIGHTPAREN StatementBlock

    RIGHTPAREN      shift and go to state 47


state 33

    (17) Formals -> VariableList .

    RIGHTPAREN      reduce using rule 17 (Formals -> VariableList .)


state 34

    (18) Formals -> empty .

    RIGHTPAREN      reduce using rule 18 (Formals -> empty .)


state 35

    (19) VariableList -> Variable . COMMA VariableList
    (20) VariableList -> Variable .

    COMMA           shift and go to state 48
    RIGHTPAREN      reduce using rule 20 (VariableList -> Variable .)


state 36

    (16) FunctionDeclaration -> VOID ID LEFTPAREN Formals . RIGHTPAREN StatementBlock

    RIGHTPAREN      shift and go to state 49


state 37

    (21) ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE . FieldKleene RIGHTBRACE
    (28) FieldKleene -> . Field FieldKleene
    (29) FieldKleene -> . empty
    (30) Field -> . VariableDeclaration
    (31) Field -> . FunctionDeclaration
    (102) empty -> .
    (7) VariableDeclaration -> . Variable
    (15) FunctionDeclaration -> . Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (16) FunctionDeclaration -> . VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    RIGHTBRACE      reduce using rule 102 (empty -> .)
    VOID            shift and go to state 10
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    FieldKleene                    shift and go to state 50
    Field                          shift and go to state 51
    empty                          shift and go to state 52
    VariableDeclaration            shift and go to state 53
    FunctionDeclaration            shift and go to state 54
    Variable                       shift and go to state 7
    Type                           shift and go to state 8

state 38

    (22) ClassOptions -> EXTENDS ID .
    (24) ClassOptions -> EXTENDS ID . IMPLEMENTS IdList

    LEFTBRACE       reduce using rule 22 (ClassOptions -> EXTENDS ID .)
    IMPLEMENTS      shift and go to state 55


state 39

    (23) ClassOptions -> IMPLEMENTS IdList .

    LEFTBRACE       reduce using rule 23 (ClassOptions -> IMPLEMENTS IdList .)


state 40

    (26) IdList -> ID . COMMA IdList
    (27) IdList -> ID .

    COMMA           shift and go to state 56
    LEFTBRACE       reduce using rule 27 (IdList -> ID .)


state 41

    (32) InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene . RIGHTBRACE

    RIGHTBRACE      shift and go to state 57


state 42

    (33) PrototypeKleene -> Prototype . PrototypeKleene
    (33) PrototypeKleene -> . Prototype PrototypeKleene
    (34) PrototypeKleene -> . empty
    (35) Prototype -> . Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON
    (36) Prototype -> . VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON
    (102) empty -> .
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    VOID            shift and go to state 45
    RIGHTBRACE      reduce using rule 102 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Prototype                      shift and go to state 42
    PrototypeKleene                shift and go to state 58
    empty                          shift and go to state 43
    Type                           shift and go to state 44

state 43

    (34) PrototypeKleene -> empty .

    RIGHTBRACE      reduce using rule 34 (PrototypeKleene -> empty .)


state 44

    (35) Prototype -> Type . ID LEFTPAREN Formals RIGHTPAREN SEMICOLON
    (13) Type -> Type . LEFTBRACKET RIGHTBRACKET

    ID              shift and go to state 59
    LEFTBRACKET     shift and go to state 19


state 45

    (36) Prototype -> VOID . ID LEFTPAREN Formals RIGHTPAREN SEMICOLON

    ID              shift and go to state 60


state 46

    (8) Variable -> Type ID .

    COMMA           reduce using rule 8 (Variable -> Type ID .)
    RIGHTPAREN      reduce using rule 8 (Variable -> Type ID .)
    INT             reduce using rule 8 (Variable -> Type ID .)
    DOUBLE          reduce using rule 8 (Variable -> Type ID .)
    BOOLEAN         reduce using rule 8 (Variable -> Type ID .)
    STRING          reduce using rule 8 (Variable -> Type ID .)
    ID              reduce using rule 8 (Variable -> Type ID .)
    SEMICOLON       reduce using rule 8 (Variable -> Type ID .)
    THIS            reduce using rule 8 (Variable -> Type ID .)
    LEFTPAREN       reduce using rule 8 (Variable -> Type ID .)
    MINUS           reduce using rule 8 (Variable -> Type ID .)
    NOT             reduce using rule 8 (Variable -> Type ID .)
    READLN          reduce using rule 8 (Variable -> Type ID .)
    NEW             reduce using rule 8 (Variable -> Type ID .)
    NEWARRAY        reduce using rule 8 (Variable -> Type ID .)
    IF              reduce using rule 8 (Variable -> Type ID .)
    WHILE           reduce using rule 8 (Variable -> Type ID .)
    FOR             reduce using rule 8 (Variable -> Type ID .)
    BREAK           reduce using rule 8 (Variable -> Type ID .)
    RETURN          reduce using rule 8 (Variable -> Type ID .)
    PRINTLN         reduce using rule 8 (Variable -> Type ID .)
    LEFTBRACE       reduce using rule 8 (Variable -> Type ID .)
    INTCONSTANT     reduce using rule 8 (Variable -> Type ID .)
    DOUBLECONSTANT  reduce using rule 8 (Variable -> Type ID .)
    STRINGCONSTANT  reduce using rule 8 (Variable -> Type ID .)
    BOOLEANCONSTANT reduce using rule 8 (Variable -> Type ID .)
    NULL            reduce using rule 8 (Variable -> Type ID .)
    RIGHTBRACE      reduce using rule 8 (Variable -> Type ID .)


state 47

    (15) FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN . StatementBlock
    (37) StatementBlock -> . LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE

    LEFTBRACE       shift and go to state 62

    StatementBlock                 shift and go to state 61

state 48

    (19) VariableList -> Variable COMMA . VariableList
    (19) VariableList -> . Variable COMMA VariableList
    (20) VariableList -> . Variable
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Variable                       shift and go to state 35
    VariableList                   shift and go to state 63
    Type                           shift and go to state 31

state 49

    (16) FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN . StatementBlock
    (37) StatementBlock -> . LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE

    LEFTBRACE       shift and go to state 62

    StatementBlock                 shift and go to state 64

state 50

    (21) ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene . RIGHTBRACE

    RIGHTBRACE      shift and go to state 65


state 51

    (28) FieldKleene -> Field . FieldKleene
    (28) FieldKleene -> . Field FieldKleene
    (29) FieldKleene -> . empty
    (30) Field -> . VariableDeclaration
    (31) Field -> . FunctionDeclaration
    (102) empty -> .
    (7) VariableDeclaration -> . Variable
    (15) FunctionDeclaration -> . Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (16) FunctionDeclaration -> . VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    RIGHTBRACE      reduce using rule 102 (empty -> .)
    VOID            shift and go to state 10
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Field                          shift and go to state 51
    FieldKleene                    shift and go to state 66
    empty                          shift and go to state 52
    VariableDeclaration            shift and go to state 53
    FunctionDeclaration            shift and go to state 54
    Variable                       shift and go to state 7
    Type                           shift and go to state 8

state 52

    (29) FieldKleene -> empty .

    RIGHTBRACE      reduce using rule 29 (FieldKleene -> empty .)


state 53

    (30) Field -> VariableDeclaration .

    VOID            reduce using rule 30 (Field -> VariableDeclaration .)
    INT             reduce using rule 30 (Field -> VariableDeclaration .)
    DOUBLE          reduce using rule 30 (Field -> VariableDeclaration .)
    BOOLEAN         reduce using rule 30 (Field -> VariableDeclaration .)
    STRING          reduce using rule 30 (Field -> VariableDeclaration .)
    ID              reduce using rule 30 (Field -> VariableDeclaration .)
    RIGHTBRACE      reduce using rule 30 (Field -> VariableDeclaration .)


state 54

    (31) Field -> FunctionDeclaration .

    VOID            reduce using rule 31 (Field -> FunctionDeclaration .)
    INT             reduce using rule 31 (Field -> FunctionDeclaration .)
    DOUBLE          reduce using rule 31 (Field -> FunctionDeclaration .)
    BOOLEAN         reduce using rule 31 (Field -> FunctionDeclaration .)
    STRING          reduce using rule 31 (Field -> FunctionDeclaration .)
    ID              reduce using rule 31 (Field -> FunctionDeclaration .)
    RIGHTBRACE      reduce using rule 31 (Field -> FunctionDeclaration .)


state 55

    (24) ClassOptions -> EXTENDS ID IMPLEMENTS . IdList
    (26) IdList -> . ID COMMA IdList
    (27) IdList -> . ID

    ID              shift and go to state 40

    IdList                         shift and go to state 67

state 56

    (26) IdList -> ID COMMA . IdList
    (26) IdList -> . ID COMMA IdList
    (27) IdList -> . ID

    ID              shift and go to state 40

    IdList                         shift and go to state 68

state 57

    (32) InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .

    VOID            reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)
    CLASS           reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)
    INTERFACE       reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)
    INT             reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)
    DOUBLE          reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)
    BOOLEAN         reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)
    STRING          reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)
    ID              reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)
    $end            reduce using rule 32 (InterfaceDeclaration -> INTERFACE ID LEFTBRACE PrototypeKleene RIGHTBRACE .)


state 58

    (33) PrototypeKleene -> Prototype PrototypeKleene .

    RIGHTBRACE      reduce using rule 33 (PrototypeKleene -> Prototype PrototypeKleene .)


state 59

    (35) Prototype -> Type ID . LEFTPAREN Formals RIGHTPAREN SEMICOLON

    LEFTPAREN       shift and go to state 69


state 60

    (36) Prototype -> VOID ID . LEFTPAREN Formals RIGHTPAREN SEMICOLON

    LEFTPAREN       shift and go to state 70


state 61

    (15) FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .

    VOID            reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    CLASS           reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    INTERFACE       reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    INT             reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    DOUBLE          reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    BOOLEAN         reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    STRING          reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    ID              reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    $end            reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    RIGHTBRACE      reduce using rule 15 (FunctionDeclaration -> Type ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)


state 62

    (37) StatementBlock -> LEFTBRACE . VaribleDeclarationKleene StatementKleene RIGHTBRACE
    (38) VaribleDeclarationKleene -> . VariableDeclaration VaribleDeclarationKleene
    (39) VaribleDeclarationKleene -> . empty
    (7) VariableDeclaration -> . Variable
    (102) empty -> .
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

  ! shift/reduce conflict for ID resolved as shift
    SEMICOLON       reduce using rule 102 (empty -> .)
    THIS            reduce using rule 102 (empty -> .)
    LEFTPAREN       reduce using rule 102 (empty -> .)
    MINUS           reduce using rule 102 (empty -> .)
    NOT             reduce using rule 102 (empty -> .)
    READLN          reduce using rule 102 (empty -> .)
    NEW             reduce using rule 102 (empty -> .)
    NEWARRAY        reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    BREAK           reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    PRINTLN         reduce using rule 102 (empty -> .)
    LEFTBRACE       reduce using rule 102 (empty -> .)
    INTCONSTANT     reduce using rule 102 (empty -> .)
    DOUBLECONSTANT  reduce using rule 102 (empty -> .)
    STRINGCONSTANT  reduce using rule 102 (empty -> .)
    BOOLEANCONSTANT reduce using rule 102 (empty -> .)
    NULL            reduce using rule 102 (empty -> .)
    RIGHTBRACE      reduce using rule 102 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

  ! ID              [ reduce using rule 102 (empty -> .) ]

    VaribleDeclarationKleene       shift and go to state 71
    VariableDeclaration            shift and go to state 72
    empty                          shift and go to state 73
    Variable                       shift and go to state 7
    Type                           shift and go to state 31

state 63

    (19) VariableList -> Variable COMMA VariableList .

    RIGHTPAREN      reduce using rule 19 (VariableList -> Variable COMMA VariableList .)


state 64

    (16) FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .

    VOID            reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    CLASS           reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    INTERFACE       reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    INT             reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    DOUBLE          reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    BOOLEAN         reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    STRING          reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    ID              reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    $end            reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)
    RIGHTBRACE      reduce using rule 16 (FunctionDeclaration -> VOID ID LEFTPAREN Formals RIGHTPAREN StatementBlock .)


state 65

    (21) ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .

    VOID            reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)
    CLASS           reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)
    INTERFACE       reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)
    INT             reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)
    DOUBLE          reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)
    BOOLEAN         reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)
    STRING          reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)
    ID              reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)
    $end            reduce using rule 21 (ClassDeclaration -> CLASS ID ClassOptions LEFTBRACE FieldKleene RIGHTBRACE .)


state 66

    (28) FieldKleene -> Field FieldKleene .

    RIGHTBRACE      reduce using rule 28 (FieldKleene -> Field FieldKleene .)


state 67

    (24) ClassOptions -> EXTENDS ID IMPLEMENTS IdList .

    LEFTBRACE       reduce using rule 24 (ClassOptions -> EXTENDS ID IMPLEMENTS IdList .)


state 68

    (26) IdList -> ID COMMA IdList .

    LEFTBRACE       reduce using rule 26 (IdList -> ID COMMA IdList .)


state 69

    (35) Prototype -> Type ID LEFTPAREN . Formals RIGHTPAREN SEMICOLON
    (17) Formals -> . VariableList
    (18) Formals -> . empty
    (19) VariableList -> . Variable COMMA VariableList
    (20) VariableList -> . Variable
    (102) empty -> .
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    RIGHTPAREN      reduce using rule 102 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Type                           shift and go to state 31
    Formals                        shift and go to state 74
    VariableList                   shift and go to state 33
    empty                          shift and go to state 34
    Variable                       shift and go to state 35

state 70

    (36) Prototype -> VOID ID LEFTPAREN . Formals RIGHTPAREN SEMICOLON
    (17) Formals -> . VariableList
    (18) Formals -> . empty
    (19) VariableList -> . Variable COMMA VariableList
    (20) VariableList -> . Variable
    (102) empty -> .
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    RIGHTPAREN      reduce using rule 102 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Formals                        shift and go to state 75
    VariableList                   shift and go to state 33
    empty                          shift and go to state 34
    Variable                       shift and go to state 35
    Type                           shift and go to state 31

state 71

    (37) StatementBlock -> LEFTBRACE VaribleDeclarationKleene . StatementKleene RIGHTBRACE
    (40) StatementKleene -> . Statement StatementKleene
    (41) StatementKleene -> . empty
    (42) Statement -> . Expression SEMICOLON
    (43) Statement -> . SEMICOLON
    (44) Statement -> . IfStatement
    (45) Statement -> . WhileStatement
    (46) Statement -> . ForStatement
    (47) Statement -> . BreakStatement
    (48) Statement -> . ReturnStatement
    (49) Statement -> . PrintStatement
    (50) Statement -> . StatementBlock
    (102) empty -> .
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (51) IfStatement -> . IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse
    (54) WhileStatement -> . WHILE LEFTPAREN Expression RIGHTPAREN Statement
    (55) ForStatement -> . FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
    (58) BreakStatement -> . BREAK SEMICOLON
    (59) ReturnStatement -> . RETURN OptionalExpression SEMICOLON
    (60) PrintStatement -> . PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON
    (37) StatementBlock -> . LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    SEMICOLON       shift and go to state 80
    RIGHTBRACE      reduce using rule 102 (empty -> .)
    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104
    PRINTLN         shift and go to state 105
    LEFTBRACE       shift and go to state 62
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    StatementKleene                shift and go to state 76
    Statement                      shift and go to state 77
    empty                          shift and go to state 78
    Expression                     shift and go to state 79
    IfStatement                    shift and go to state 81
    WhileStatement                 shift and go to state 82
    ForStatement                   shift and go to state 83
    BreakStatement                 shift and go to state 84
    ReturnStatement                shift and go to state 85
    PrintStatement                 shift and go to state 86
    StatementBlock                 shift and go to state 87
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 72

    (38) VaribleDeclarationKleene -> VariableDeclaration . VaribleDeclarationKleene
    (38) VaribleDeclarationKleene -> . VariableDeclaration VaribleDeclarationKleene
    (39) VaribleDeclarationKleene -> . empty
    (7) VariableDeclaration -> . Variable
    (102) empty -> .
    (8) Variable -> . Type ID
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

  ! shift/reduce conflict for ID resolved as shift
    SEMICOLON       reduce using rule 102 (empty -> .)
    THIS            reduce using rule 102 (empty -> .)
    LEFTPAREN       reduce using rule 102 (empty -> .)
    MINUS           reduce using rule 102 (empty -> .)
    NOT             reduce using rule 102 (empty -> .)
    READLN          reduce using rule 102 (empty -> .)
    NEW             reduce using rule 102 (empty -> .)
    NEWARRAY        reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    BREAK           reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    PRINTLN         reduce using rule 102 (empty -> .)
    LEFTBRACE       reduce using rule 102 (empty -> .)
    INTCONSTANT     reduce using rule 102 (empty -> .)
    DOUBLECONSTANT  reduce using rule 102 (empty -> .)
    STRINGCONSTANT  reduce using rule 102 (empty -> .)
    BOOLEANCONSTANT reduce using rule 102 (empty -> .)
    NULL            reduce using rule 102 (empty -> .)
    RIGHTBRACE      reduce using rule 102 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

  ! ID              [ reduce using rule 102 (empty -> .) ]

    VariableDeclaration            shift and go to state 72
    VaribleDeclarationKleene       shift and go to state 110
    empty                          shift and go to state 73
    Variable                       shift and go to state 7
    Type                           shift and go to state 31

state 73

    (39) VaribleDeclarationKleene -> empty .

    SEMICOLON       reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    THIS            reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    LEFTPAREN       reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    MINUS           reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    NOT             reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    READLN          reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    NEW             reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    NEWARRAY        reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    IF              reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    WHILE           reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    FOR             reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    BREAK           reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    RETURN          reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    PRINTLN         reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    LEFTBRACE       reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    ID              reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    INTCONSTANT     reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    DOUBLECONSTANT  reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    STRINGCONSTANT  reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    BOOLEANCONSTANT reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    NULL            reduce using rule 39 (VaribleDeclarationKleene -> empty .)
    RIGHTBRACE      reduce using rule 39 (VaribleDeclarationKleene -> empty .)


state 74

    (35) Prototype -> Type ID LEFTPAREN Formals . RIGHTPAREN SEMICOLON

    RIGHTPAREN      shift and go to state 111


state 75

    (36) Prototype -> VOID ID LEFTPAREN Formals . RIGHTPAREN SEMICOLON

    RIGHTPAREN      shift and go to state 112


state 76

    (37) StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene . RIGHTBRACE

    RIGHTBRACE      shift and go to state 113


state 77

    (40) StatementKleene -> Statement . StatementKleene
    (40) StatementKleene -> . Statement StatementKleene
    (41) StatementKleene -> . empty
    (42) Statement -> . Expression SEMICOLON
    (43) Statement -> . SEMICOLON
    (44) Statement -> . IfStatement
    (45) Statement -> . WhileStatement
    (46) Statement -> . ForStatement
    (47) Statement -> . BreakStatement
    (48) Statement -> . ReturnStatement
    (49) Statement -> . PrintStatement
    (50) Statement -> . StatementBlock
    (102) empty -> .
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (51) IfStatement -> . IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse
    (54) WhileStatement -> . WHILE LEFTPAREN Expression RIGHTPAREN Statement
    (55) ForStatement -> . FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
    (58) BreakStatement -> . BREAK SEMICOLON
    (59) ReturnStatement -> . RETURN OptionalExpression SEMICOLON
    (60) PrintStatement -> . PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON
    (37) StatementBlock -> . LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    SEMICOLON       shift and go to state 80
    RIGHTBRACE      reduce using rule 102 (empty -> .)
    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104
    PRINTLN         shift and go to state 105
    LEFTBRACE       shift and go to state 62
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Statement                      shift and go to state 77
    StatementKleene                shift and go to state 114
    empty                          shift and go to state 78
    Expression                     shift and go to state 79
    IfStatement                    shift and go to state 81
    WhileStatement                 shift and go to state 82
    ForStatement                   shift and go to state 83
    BreakStatement                 shift and go to state 84
    ReturnStatement                shift and go to state 85
    PrintStatement                 shift and go to state 86
    StatementBlock                 shift and go to state 87
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 78

    (41) StatementKleene -> empty .

    RIGHTBRACE      reduce using rule 41 (StatementKleene -> empty .)


state 79

    (42) Statement -> Expression . SEMICOLON
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

    SEMICOLON       shift and go to state 115
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 80

    (43) Statement -> SEMICOLON .

    SEMICOLON       reduce using rule 43 (Statement -> SEMICOLON .)
    THIS            reduce using rule 43 (Statement -> SEMICOLON .)
    LEFTPAREN       reduce using rule 43 (Statement -> SEMICOLON .)
    MINUS           reduce using rule 43 (Statement -> SEMICOLON .)
    NOT             reduce using rule 43 (Statement -> SEMICOLON .)
    READLN          reduce using rule 43 (Statement -> SEMICOLON .)
    NEW             reduce using rule 43 (Statement -> SEMICOLON .)
    NEWARRAY        reduce using rule 43 (Statement -> SEMICOLON .)
    IF              reduce using rule 43 (Statement -> SEMICOLON .)
    WHILE           reduce using rule 43 (Statement -> SEMICOLON .)
    FOR             reduce using rule 43 (Statement -> SEMICOLON .)
    BREAK           reduce using rule 43 (Statement -> SEMICOLON .)
    RETURN          reduce using rule 43 (Statement -> SEMICOLON .)
    PRINTLN         reduce using rule 43 (Statement -> SEMICOLON .)
    LEFTBRACE       reduce using rule 43 (Statement -> SEMICOLON .)
    ID              reduce using rule 43 (Statement -> SEMICOLON .)
    INTCONSTANT     reduce using rule 43 (Statement -> SEMICOLON .)
    DOUBLECONSTANT  reduce using rule 43 (Statement -> SEMICOLON .)
    STRINGCONSTANT  reduce using rule 43 (Statement -> SEMICOLON .)
    BOOLEANCONSTANT reduce using rule 43 (Statement -> SEMICOLON .)
    NULL            reduce using rule 43 (Statement -> SEMICOLON .)
    RIGHTBRACE      reduce using rule 43 (Statement -> SEMICOLON .)
    ELSE            reduce using rule 43 (Statement -> SEMICOLON .)


state 81

    (44) Statement -> IfStatement .

    SEMICOLON       reduce using rule 44 (Statement -> IfStatement .)
    THIS            reduce using rule 44 (Statement -> IfStatement .)
    LEFTPAREN       reduce using rule 44 (Statement -> IfStatement .)
    MINUS           reduce using rule 44 (Statement -> IfStatement .)
    NOT             reduce using rule 44 (Statement -> IfStatement .)
    READLN          reduce using rule 44 (Statement -> IfStatement .)
    NEW             reduce using rule 44 (Statement -> IfStatement .)
    NEWARRAY        reduce using rule 44 (Statement -> IfStatement .)
    IF              reduce using rule 44 (Statement -> IfStatement .)
    WHILE           reduce using rule 44 (Statement -> IfStatement .)
    FOR             reduce using rule 44 (Statement -> IfStatement .)
    BREAK           reduce using rule 44 (Statement -> IfStatement .)
    RETURN          reduce using rule 44 (Statement -> IfStatement .)
    PRINTLN         reduce using rule 44 (Statement -> IfStatement .)
    LEFTBRACE       reduce using rule 44 (Statement -> IfStatement .)
    ID              reduce using rule 44 (Statement -> IfStatement .)
    INTCONSTANT     reduce using rule 44 (Statement -> IfStatement .)
    DOUBLECONSTANT  reduce using rule 44 (Statement -> IfStatement .)
    STRINGCONSTANT  reduce using rule 44 (Statement -> IfStatement .)
    BOOLEANCONSTANT reduce using rule 44 (Statement -> IfStatement .)
    NULL            reduce using rule 44 (Statement -> IfStatement .)
    RIGHTBRACE      reduce using rule 44 (Statement -> IfStatement .)
    ELSE            reduce using rule 44 (Statement -> IfStatement .)


state 82

    (45) Statement -> WhileStatement .

    SEMICOLON       reduce using rule 45 (Statement -> WhileStatement .)
    THIS            reduce using rule 45 (Statement -> WhileStatement .)
    LEFTPAREN       reduce using rule 45 (Statement -> WhileStatement .)
    MINUS           reduce using rule 45 (Statement -> WhileStatement .)
    NOT             reduce using rule 45 (Statement -> WhileStatement .)
    READLN          reduce using rule 45 (Statement -> WhileStatement .)
    NEW             reduce using rule 45 (Statement -> WhileStatement .)
    NEWARRAY        reduce using rule 45 (Statement -> WhileStatement .)
    IF              reduce using rule 45 (Statement -> WhileStatement .)
    WHILE           reduce using rule 45 (Statement -> WhileStatement .)
    FOR             reduce using rule 45 (Statement -> WhileStatement .)
    BREAK           reduce using rule 45 (Statement -> WhileStatement .)
    RETURN          reduce using rule 45 (Statement -> WhileStatement .)
    PRINTLN         reduce using rule 45 (Statement -> WhileStatement .)
    LEFTBRACE       reduce using rule 45 (Statement -> WhileStatement .)
    ID              reduce using rule 45 (Statement -> WhileStatement .)
    INTCONSTANT     reduce using rule 45 (Statement -> WhileStatement .)
    DOUBLECONSTANT  reduce using rule 45 (Statement -> WhileStatement .)
    STRINGCONSTANT  reduce using rule 45 (Statement -> WhileStatement .)
    BOOLEANCONSTANT reduce using rule 45 (Statement -> WhileStatement .)
    NULL            reduce using rule 45 (Statement -> WhileStatement .)
    RIGHTBRACE      reduce using rule 45 (Statement -> WhileStatement .)
    ELSE            reduce using rule 45 (Statement -> WhileStatement .)


state 83

    (46) Statement -> ForStatement .

    SEMICOLON       reduce using rule 46 (Statement -> ForStatement .)
    THIS            reduce using rule 46 (Statement -> ForStatement .)
    LEFTPAREN       reduce using rule 46 (Statement -> ForStatement .)
    MINUS           reduce using rule 46 (Statement -> ForStatement .)
    NOT             reduce using rule 46 (Statement -> ForStatement .)
    READLN          reduce using rule 46 (Statement -> ForStatement .)
    NEW             reduce using rule 46 (Statement -> ForStatement .)
    NEWARRAY        reduce using rule 46 (Statement -> ForStatement .)
    IF              reduce using rule 46 (Statement -> ForStatement .)
    WHILE           reduce using rule 46 (Statement -> ForStatement .)
    FOR             reduce using rule 46 (Statement -> ForStatement .)
    BREAK           reduce using rule 46 (Statement -> ForStatement .)
    RETURN          reduce using rule 46 (Statement -> ForStatement .)
    PRINTLN         reduce using rule 46 (Statement -> ForStatement .)
    LEFTBRACE       reduce using rule 46 (Statement -> ForStatement .)
    ID              reduce using rule 46 (Statement -> ForStatement .)
    INTCONSTANT     reduce using rule 46 (Statement -> ForStatement .)
    DOUBLECONSTANT  reduce using rule 46 (Statement -> ForStatement .)
    STRINGCONSTANT  reduce using rule 46 (Statement -> ForStatement .)
    BOOLEANCONSTANT reduce using rule 46 (Statement -> ForStatement .)
    NULL            reduce using rule 46 (Statement -> ForStatement .)
    RIGHTBRACE      reduce using rule 46 (Statement -> ForStatement .)
    ELSE            reduce using rule 46 (Statement -> ForStatement .)


state 84

    (47) Statement -> BreakStatement .

    SEMICOLON       reduce using rule 47 (Statement -> BreakStatement .)
    THIS            reduce using rule 47 (Statement -> BreakStatement .)
    LEFTPAREN       reduce using rule 47 (Statement -> BreakStatement .)
    MINUS           reduce using rule 47 (Statement -> BreakStatement .)
    NOT             reduce using rule 47 (Statement -> BreakStatement .)
    READLN          reduce using rule 47 (Statement -> BreakStatement .)
    NEW             reduce using rule 47 (Statement -> BreakStatement .)
    NEWARRAY        reduce using rule 47 (Statement -> BreakStatement .)
    IF              reduce using rule 47 (Statement -> BreakStatement .)
    WHILE           reduce using rule 47 (Statement -> BreakStatement .)
    FOR             reduce using rule 47 (Statement -> BreakStatement .)
    BREAK           reduce using rule 47 (Statement -> BreakStatement .)
    RETURN          reduce using rule 47 (Statement -> BreakStatement .)
    PRINTLN         reduce using rule 47 (Statement -> BreakStatement .)
    LEFTBRACE       reduce using rule 47 (Statement -> BreakStatement .)
    ID              reduce using rule 47 (Statement -> BreakStatement .)
    INTCONSTANT     reduce using rule 47 (Statement -> BreakStatement .)
    DOUBLECONSTANT  reduce using rule 47 (Statement -> BreakStatement .)
    STRINGCONSTANT  reduce using rule 47 (Statement -> BreakStatement .)
    BOOLEANCONSTANT reduce using rule 47 (Statement -> BreakStatement .)
    NULL            reduce using rule 47 (Statement -> BreakStatement .)
    RIGHTBRACE      reduce using rule 47 (Statement -> BreakStatement .)
    ELSE            reduce using rule 47 (Statement -> BreakStatement .)


state 85

    (48) Statement -> ReturnStatement .

    SEMICOLON       reduce using rule 48 (Statement -> ReturnStatement .)
    THIS            reduce using rule 48 (Statement -> ReturnStatement .)
    LEFTPAREN       reduce using rule 48 (Statement -> ReturnStatement .)
    MINUS           reduce using rule 48 (Statement -> ReturnStatement .)
    NOT             reduce using rule 48 (Statement -> ReturnStatement .)
    READLN          reduce using rule 48 (Statement -> ReturnStatement .)
    NEW             reduce using rule 48 (Statement -> ReturnStatement .)
    NEWARRAY        reduce using rule 48 (Statement -> ReturnStatement .)
    IF              reduce using rule 48 (Statement -> ReturnStatement .)
    WHILE           reduce using rule 48 (Statement -> ReturnStatement .)
    FOR             reduce using rule 48 (Statement -> ReturnStatement .)
    BREAK           reduce using rule 48 (Statement -> ReturnStatement .)
    RETURN          reduce using rule 48 (Statement -> ReturnStatement .)
    PRINTLN         reduce using rule 48 (Statement -> ReturnStatement .)
    LEFTBRACE       reduce using rule 48 (Statement -> ReturnStatement .)
    ID              reduce using rule 48 (Statement -> ReturnStatement .)
    INTCONSTANT     reduce using rule 48 (Statement -> ReturnStatement .)
    DOUBLECONSTANT  reduce using rule 48 (Statement -> ReturnStatement .)
    STRINGCONSTANT  reduce using rule 48 (Statement -> ReturnStatement .)
    BOOLEANCONSTANT reduce using rule 48 (Statement -> ReturnStatement .)
    NULL            reduce using rule 48 (Statement -> ReturnStatement .)
    RIGHTBRACE      reduce using rule 48 (Statement -> ReturnStatement .)
    ELSE            reduce using rule 48 (Statement -> ReturnStatement .)


state 86

    (49) Statement -> PrintStatement .

    SEMICOLON       reduce using rule 49 (Statement -> PrintStatement .)
    THIS            reduce using rule 49 (Statement -> PrintStatement .)
    LEFTPAREN       reduce using rule 49 (Statement -> PrintStatement .)
    MINUS           reduce using rule 49 (Statement -> PrintStatement .)
    NOT             reduce using rule 49 (Statement -> PrintStatement .)
    READLN          reduce using rule 49 (Statement -> PrintStatement .)
    NEW             reduce using rule 49 (Statement -> PrintStatement .)
    NEWARRAY        reduce using rule 49 (Statement -> PrintStatement .)
    IF              reduce using rule 49 (Statement -> PrintStatement .)
    WHILE           reduce using rule 49 (Statement -> PrintStatement .)
    FOR             reduce using rule 49 (Statement -> PrintStatement .)
    BREAK           reduce using rule 49 (Statement -> PrintStatement .)
    RETURN          reduce using rule 49 (Statement -> PrintStatement .)
    PRINTLN         reduce using rule 49 (Statement -> PrintStatement .)
    LEFTBRACE       reduce using rule 49 (Statement -> PrintStatement .)
    ID              reduce using rule 49 (Statement -> PrintStatement .)
    INTCONSTANT     reduce using rule 49 (Statement -> PrintStatement .)
    DOUBLECONSTANT  reduce using rule 49 (Statement -> PrintStatement .)
    STRINGCONSTANT  reduce using rule 49 (Statement -> PrintStatement .)
    BOOLEANCONSTANT reduce using rule 49 (Statement -> PrintStatement .)
    NULL            reduce using rule 49 (Statement -> PrintStatement .)
    RIGHTBRACE      reduce using rule 49 (Statement -> PrintStatement .)
    ELSE            reduce using rule 49 (Statement -> PrintStatement .)


state 87

    (50) Statement -> StatementBlock .

    SEMICOLON       reduce using rule 50 (Statement -> StatementBlock .)
    THIS            reduce using rule 50 (Statement -> StatementBlock .)
    LEFTPAREN       reduce using rule 50 (Statement -> StatementBlock .)
    MINUS           reduce using rule 50 (Statement -> StatementBlock .)
    NOT             reduce using rule 50 (Statement -> StatementBlock .)
    READLN          reduce using rule 50 (Statement -> StatementBlock .)
    NEW             reduce using rule 50 (Statement -> StatementBlock .)
    NEWARRAY        reduce using rule 50 (Statement -> StatementBlock .)
    IF              reduce using rule 50 (Statement -> StatementBlock .)
    WHILE           reduce using rule 50 (Statement -> StatementBlock .)
    FOR             reduce using rule 50 (Statement -> StatementBlock .)
    BREAK           reduce using rule 50 (Statement -> StatementBlock .)
    RETURN          reduce using rule 50 (Statement -> StatementBlock .)
    PRINTLN         reduce using rule 50 (Statement -> StatementBlock .)
    LEFTBRACE       reduce using rule 50 (Statement -> StatementBlock .)
    ID              reduce using rule 50 (Statement -> StatementBlock .)
    INTCONSTANT     reduce using rule 50 (Statement -> StatementBlock .)
    DOUBLECONSTANT  reduce using rule 50 (Statement -> StatementBlock .)
    STRINGCONSTANT  reduce using rule 50 (Statement -> StatementBlock .)
    BOOLEANCONSTANT reduce using rule 50 (Statement -> StatementBlock .)
    NULL            reduce using rule 50 (Statement -> StatementBlock .)
    RIGHTBRACE      reduce using rule 50 (Statement -> StatementBlock .)
    ELSE            reduce using rule 50 (Statement -> StatementBlock .)


state 88

    (63) Expression -> LVal . ASSIGNOP Expression
    (65) Expression -> LVal .
    (91) LVal -> LVal . LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> LVal . PERIOD ID

    ASSIGNOP        shift and go to state 132
    SEMICOLON       reduce using rule 65 (Expression -> LVal .)
    PLUS            reduce using rule 65 (Expression -> LVal .)
    MINUS           reduce using rule 65 (Expression -> LVal .)
    MULTIPLICATION  reduce using rule 65 (Expression -> LVal .)
    DIVISION        reduce using rule 65 (Expression -> LVal .)
    MOD             reduce using rule 65 (Expression -> LVal .)
    LESS            reduce using rule 65 (Expression -> LVal .)
    LESSEQUAL       reduce using rule 65 (Expression -> LVal .)
    GREATER         reduce using rule 65 (Expression -> LVal .)
    GREATEREQUAL    reduce using rule 65 (Expression -> LVal .)
    EQUAL           reduce using rule 65 (Expression -> LVal .)
    NOTEQUAL        reduce using rule 65 (Expression -> LVal .)
    AND             reduce using rule 65 (Expression -> LVal .)
    OR              reduce using rule 65 (Expression -> LVal .)
    RIGHTPAREN      reduce using rule 65 (Expression -> LVal .)
    RIGHTBRACKET    reduce using rule 65 (Expression -> LVal .)
    COMMA           reduce using rule 65 (Expression -> LVal .)
    LEFTBRACKET     shift and go to state 133
    PERIOD          shift and go to state 134


state 89

    (64) Expression -> Constant .

    SEMICOLON       reduce using rule 64 (Expression -> Constant .)
    PLUS            reduce using rule 64 (Expression -> Constant .)
    MINUS           reduce using rule 64 (Expression -> Constant .)
    MULTIPLICATION  reduce using rule 64 (Expression -> Constant .)
    DIVISION        reduce using rule 64 (Expression -> Constant .)
    MOD             reduce using rule 64 (Expression -> Constant .)
    LESS            reduce using rule 64 (Expression -> Constant .)
    LESSEQUAL       reduce using rule 64 (Expression -> Constant .)
    GREATER         reduce using rule 64 (Expression -> Constant .)
    GREATEREQUAL    reduce using rule 64 (Expression -> Constant .)
    EQUAL           reduce using rule 64 (Expression -> Constant .)
    NOTEQUAL        reduce using rule 64 (Expression -> Constant .)
    AND             reduce using rule 64 (Expression -> Constant .)
    OR              reduce using rule 64 (Expression -> Constant .)
    RIGHTPAREN      reduce using rule 64 (Expression -> Constant .)
    RIGHTBRACKET    reduce using rule 64 (Expression -> Constant .)
    COMMA           reduce using rule 64 (Expression -> Constant .)


state 90

    (66) Expression -> THIS .

    SEMICOLON       reduce using rule 66 (Expression -> THIS .)
    PLUS            reduce using rule 66 (Expression -> THIS .)
    MINUS           reduce using rule 66 (Expression -> THIS .)
    MULTIPLICATION  reduce using rule 66 (Expression -> THIS .)
    DIVISION        reduce using rule 66 (Expression -> THIS .)
    MOD             reduce using rule 66 (Expression -> THIS .)
    LESS            reduce using rule 66 (Expression -> THIS .)
    LESSEQUAL       reduce using rule 66 (Expression -> THIS .)
    GREATER         reduce using rule 66 (Expression -> THIS .)
    GREATEREQUAL    reduce using rule 66 (Expression -> THIS .)
    EQUAL           reduce using rule 66 (Expression -> THIS .)
    NOTEQUAL        reduce using rule 66 (Expression -> THIS .)
    AND             reduce using rule 66 (Expression -> THIS .)
    OR              reduce using rule 66 (Expression -> THIS .)
    RIGHTPAREN      reduce using rule 66 (Expression -> THIS .)
    RIGHTBRACKET    reduce using rule 66 (Expression -> THIS .)
    COMMA           reduce using rule 66 (Expression -> THIS .)


state 91

    (67) Expression -> Call .

    SEMICOLON       reduce using rule 67 (Expression -> Call .)
    PLUS            reduce using rule 67 (Expression -> Call .)
    MINUS           reduce using rule 67 (Expression -> Call .)
    MULTIPLICATION  reduce using rule 67 (Expression -> Call .)
    DIVISION        reduce using rule 67 (Expression -> Call .)
    MOD             reduce using rule 67 (Expression -> Call .)
    LESS            reduce using rule 67 (Expression -> Call .)
    LESSEQUAL       reduce using rule 67 (Expression -> Call .)
    GREATER         reduce using rule 67 (Expression -> Call .)
    GREATEREQUAL    reduce using rule 67 (Expression -> Call .)
    EQUAL           reduce using rule 67 (Expression -> Call .)
    NOTEQUAL        reduce using rule 67 (Expression -> Call .)
    AND             reduce using rule 67 (Expression -> Call .)
    OR              reduce using rule 67 (Expression -> Call .)
    RIGHTPAREN      reduce using rule 67 (Expression -> Call .)
    RIGHTBRACKET    reduce using rule 67 (Expression -> Call .)
    COMMA           reduce using rule 67 (Expression -> Call .)


state 92

    (68) Expression -> LEFTPAREN . Expression RIGHTPAREN
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 135
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 93

    (69) Expression -> MINUS . Expression
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 136
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 94

    (73) Expression -> NOT . Expression
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 137
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 95

    (74) Expression -> READLN . LEFTPAREN RIGHTPAREN

    LEFTPAREN       shift and go to state 138


state 96

    (75) Expression -> NEW . LEFTPAREN ID RIGHTPAREN

    LEFTPAREN       shift and go to state 139


state 97

    (90) LVal -> ID .
    (93) Call -> ID . LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> ID . PERIOD ID LEFTPAREN Actuals RIGHTPAREN

  ! shift/reduce conflict for PERIOD resolved as shift
    ASSIGNOP        reduce using rule 90 (LVal -> ID .)
    LEFTBRACKET     reduce using rule 90 (LVal -> ID .)
    SEMICOLON       reduce using rule 90 (LVal -> ID .)
    PLUS            reduce using rule 90 (LVal -> ID .)
    MINUS           reduce using rule 90 (LVal -> ID .)
    MULTIPLICATION  reduce using rule 90 (LVal -> ID .)
    DIVISION        reduce using rule 90 (LVal -> ID .)
    MOD             reduce using rule 90 (LVal -> ID .)
    LESS            reduce using rule 90 (LVal -> ID .)
    LESSEQUAL       reduce using rule 90 (LVal -> ID .)
    GREATER         reduce using rule 90 (LVal -> ID .)
    GREATEREQUAL    reduce using rule 90 (LVal -> ID .)
    EQUAL           reduce using rule 90 (LVal -> ID .)
    NOTEQUAL        reduce using rule 90 (LVal -> ID .)
    AND             reduce using rule 90 (LVal -> ID .)
    OR              reduce using rule 90 (LVal -> ID .)
    RIGHTPAREN      reduce using rule 90 (LVal -> ID .)
    RIGHTBRACKET    reduce using rule 90 (LVal -> ID .)
    COMMA           reduce using rule 90 (LVal -> ID .)
    LEFTPAREN       shift and go to state 140
    PERIOD          shift and go to state 141

  ! PERIOD          [ reduce using rule 90 (LVal -> ID .) ]


state 98

    (76) Expression -> NEWARRAY . LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN

    LEFTPAREN       shift and go to state 142


state 99

    (97) Constant -> INTCONSTANT .

    SEMICOLON       reduce using rule 97 (Constant -> INTCONSTANT .)
    PLUS            reduce using rule 97 (Constant -> INTCONSTANT .)
    MINUS           reduce using rule 97 (Constant -> INTCONSTANT .)
    MULTIPLICATION  reduce using rule 97 (Constant -> INTCONSTANT .)
    DIVISION        reduce using rule 97 (Constant -> INTCONSTANT .)
    MOD             reduce using rule 97 (Constant -> INTCONSTANT .)
    LESS            reduce using rule 97 (Constant -> INTCONSTANT .)
    LESSEQUAL       reduce using rule 97 (Constant -> INTCONSTANT .)
    GREATER         reduce using rule 97 (Constant -> INTCONSTANT .)
    GREATEREQUAL    reduce using rule 97 (Constant -> INTCONSTANT .)
    EQUAL           reduce using rule 97 (Constant -> INTCONSTANT .)
    NOTEQUAL        reduce using rule 97 (Constant -> INTCONSTANT .)
    AND             reduce using rule 97 (Constant -> INTCONSTANT .)
    OR              reduce using rule 97 (Constant -> INTCONSTANT .)
    RIGHTPAREN      reduce using rule 97 (Constant -> INTCONSTANT .)
    RIGHTBRACKET    reduce using rule 97 (Constant -> INTCONSTANT .)
    COMMA           reduce using rule 97 (Constant -> INTCONSTANT .)


state 100

    (51) IfStatement -> IF . LEFTPAREN Expression RIGHTPAREN Statement OptionalElse

    LEFTPAREN       shift and go to state 143


state 101

    (54) WhileStatement -> WHILE . LEFTPAREN Expression RIGHTPAREN Statement

    LEFTPAREN       shift and go to state 144


state 102

    (55) ForStatement -> FOR . LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement

    LEFTPAREN       shift and go to state 145


state 103

    (58) BreakStatement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 146


state 104

    (59) ReturnStatement -> RETURN . OptionalExpression SEMICOLON
    (56) OptionalExpression -> . Expression
    (57) OptionalExpression -> . empty
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (102) empty -> .
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    SEMICOLON       reduce using rule 102 (empty -> .)
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    OptionalExpression             shift and go to state 147
    Expression                     shift and go to state 148
    empty                          shift and go to state 149
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 105

    (60) PrintStatement -> PRINTLN . LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON

    LEFTPAREN       shift and go to state 150


state 106

    (98) Constant -> DOUBLECONSTANT .

    SEMICOLON       reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    PLUS            reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    MINUS           reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    MULTIPLICATION  reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    DIVISION        reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    MOD             reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    LESS            reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    LESSEQUAL       reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    GREATER         reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    GREATEREQUAL    reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    EQUAL           reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    NOTEQUAL        reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    AND             reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    OR              reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    RIGHTPAREN      reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    RIGHTBRACKET    reduce using rule 98 (Constant -> DOUBLECONSTANT .)
    COMMA           reduce using rule 98 (Constant -> DOUBLECONSTANT .)


state 107

    (99) Constant -> STRINGCONSTANT .

    SEMICOLON       reduce using rule 99 (Constant -> STRINGCONSTANT .)
    PLUS            reduce using rule 99 (Constant -> STRINGCONSTANT .)
    MINUS           reduce using rule 99 (Constant -> STRINGCONSTANT .)
    MULTIPLICATION  reduce using rule 99 (Constant -> STRINGCONSTANT .)
    DIVISION        reduce using rule 99 (Constant -> STRINGCONSTANT .)
    MOD             reduce using rule 99 (Constant -> STRINGCONSTANT .)
    LESS            reduce using rule 99 (Constant -> STRINGCONSTANT .)
    LESSEQUAL       reduce using rule 99 (Constant -> STRINGCONSTANT .)
    GREATER         reduce using rule 99 (Constant -> STRINGCONSTANT .)
    GREATEREQUAL    reduce using rule 99 (Constant -> STRINGCONSTANT .)
    EQUAL           reduce using rule 99 (Constant -> STRINGCONSTANT .)
    NOTEQUAL        reduce using rule 99 (Constant -> STRINGCONSTANT .)
    AND             reduce using rule 99 (Constant -> STRINGCONSTANT .)
    OR              reduce using rule 99 (Constant -> STRINGCONSTANT .)
    RIGHTPAREN      reduce using rule 99 (Constant -> STRINGCONSTANT .)
    RIGHTBRACKET    reduce using rule 99 (Constant -> STRINGCONSTANT .)
    COMMA           reduce using rule 99 (Constant -> STRINGCONSTANT .)


state 108

    (100) Constant -> BOOLEANCONSTANT .

    SEMICOLON       reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    PLUS            reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    MINUS           reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    MULTIPLICATION  reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    DIVISION        reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    MOD             reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    LESS            reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    LESSEQUAL       reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    GREATER         reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    GREATEREQUAL    reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    EQUAL           reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    NOTEQUAL        reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    AND             reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    OR              reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    RIGHTPAREN      reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    RIGHTBRACKET    reduce using rule 100 (Constant -> BOOLEANCONSTANT .)
    COMMA           reduce using rule 100 (Constant -> BOOLEANCONSTANT .)


state 109

    (101) Constant -> NULL .

    SEMICOLON       reduce using rule 101 (Constant -> NULL .)
    PLUS            reduce using rule 101 (Constant -> NULL .)
    MINUS           reduce using rule 101 (Constant -> NULL .)
    MULTIPLICATION  reduce using rule 101 (Constant -> NULL .)
    DIVISION        reduce using rule 101 (Constant -> NULL .)
    MOD             reduce using rule 101 (Constant -> NULL .)
    LESS            reduce using rule 101 (Constant -> NULL .)
    LESSEQUAL       reduce using rule 101 (Constant -> NULL .)
    GREATER         reduce using rule 101 (Constant -> NULL .)
    GREATEREQUAL    reduce using rule 101 (Constant -> NULL .)
    EQUAL           reduce using rule 101 (Constant -> NULL .)
    NOTEQUAL        reduce using rule 101 (Constant -> NULL .)
    AND             reduce using rule 101 (Constant -> NULL .)
    OR              reduce using rule 101 (Constant -> NULL .)
    RIGHTPAREN      reduce using rule 101 (Constant -> NULL .)
    RIGHTBRACKET    reduce using rule 101 (Constant -> NULL .)
    COMMA           reduce using rule 101 (Constant -> NULL .)


state 110

    (38) VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .

    SEMICOLON       reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    THIS            reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    LEFTPAREN       reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    MINUS           reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    NOT             reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    READLN          reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    NEW             reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    NEWARRAY        reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    IF              reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    WHILE           reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    FOR             reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    BREAK           reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    RETURN          reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    PRINTLN         reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    LEFTBRACE       reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    ID              reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    INTCONSTANT     reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    DOUBLECONSTANT  reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    STRINGCONSTANT  reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    BOOLEANCONSTANT reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    NULL            reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)
    RIGHTBRACE      reduce using rule 38 (VaribleDeclarationKleene -> VariableDeclaration VaribleDeclarationKleene .)


state 111

    (35) Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 151


state 112

    (36) Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 152


state 113

    (37) StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .

    VOID            reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    CLASS           reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    INTERFACE       reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    INT             reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    DOUBLE          reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    BOOLEAN         reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    STRING          reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    ID              reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    $end            reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    RIGHTBRACE      reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    SEMICOLON       reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    THIS            reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    LEFTPAREN       reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    MINUS           reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    NOT             reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    READLN          reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    NEW             reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    NEWARRAY        reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    IF              reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    WHILE           reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    FOR             reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    BREAK           reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    RETURN          reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    PRINTLN         reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    LEFTBRACE       reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    INTCONSTANT     reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    DOUBLECONSTANT  reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    STRINGCONSTANT  reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    BOOLEANCONSTANT reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    NULL            reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)
    ELSE            reduce using rule 37 (StatementBlock -> LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE .)


state 114

    (40) StatementKleene -> Statement StatementKleene .

    RIGHTBRACE      reduce using rule 40 (StatementKleene -> Statement StatementKleene .)


state 115

    (42) Statement -> Expression SEMICOLON .

    SEMICOLON       reduce using rule 42 (Statement -> Expression SEMICOLON .)
    THIS            reduce using rule 42 (Statement -> Expression SEMICOLON .)
    LEFTPAREN       reduce using rule 42 (Statement -> Expression SEMICOLON .)
    MINUS           reduce using rule 42 (Statement -> Expression SEMICOLON .)
    NOT             reduce using rule 42 (Statement -> Expression SEMICOLON .)
    READLN          reduce using rule 42 (Statement -> Expression SEMICOLON .)
    NEW             reduce using rule 42 (Statement -> Expression SEMICOLON .)
    NEWARRAY        reduce using rule 42 (Statement -> Expression SEMICOLON .)
    IF              reduce using rule 42 (Statement -> Expression SEMICOLON .)
    WHILE           reduce using rule 42 (Statement -> Expression SEMICOLON .)
    FOR             reduce using rule 42 (Statement -> Expression SEMICOLON .)
    BREAK           reduce using rule 42 (Statement -> Expression SEMICOLON .)
    RETURN          reduce using rule 42 (Statement -> Expression SEMICOLON .)
    PRINTLN         reduce using rule 42 (Statement -> Expression SEMICOLON .)
    LEFTBRACE       reduce using rule 42 (Statement -> Expression SEMICOLON .)
    ID              reduce using rule 42 (Statement -> Expression SEMICOLON .)
    INTCONSTANT     reduce using rule 42 (Statement -> Expression SEMICOLON .)
    DOUBLECONSTANT  reduce using rule 42 (Statement -> Expression SEMICOLON .)
    STRINGCONSTANT  reduce using rule 42 (Statement -> Expression SEMICOLON .)
    BOOLEANCONSTANT reduce using rule 42 (Statement -> Expression SEMICOLON .)
    NULL            reduce using rule 42 (Statement -> Expression SEMICOLON .)
    RIGHTBRACE      reduce using rule 42 (Statement -> Expression SEMICOLON .)
    ELSE            reduce using rule 42 (Statement -> Expression SEMICOLON .)


state 116

    (70) Expression -> Expression ArithmaticOperator . Expression
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 153
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 117

    (71) Expression -> Expression CompareOperator . Expression
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 154
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 118

    (72) Expression -> Expression LogicalOperator . Expression
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 155
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 119

    (77) ArithmaticOperator -> PLUS .

    THIS            reduce using rule 77 (ArithmaticOperator -> PLUS .)
    LEFTPAREN       reduce using rule 77 (ArithmaticOperator -> PLUS .)
    MINUS           reduce using rule 77 (ArithmaticOperator -> PLUS .)
    NOT             reduce using rule 77 (ArithmaticOperator -> PLUS .)
    READLN          reduce using rule 77 (ArithmaticOperator -> PLUS .)
    NEW             reduce using rule 77 (ArithmaticOperator -> PLUS .)
    NEWARRAY        reduce using rule 77 (ArithmaticOperator -> PLUS .)
    ID              reduce using rule 77 (ArithmaticOperator -> PLUS .)
    INTCONSTANT     reduce using rule 77 (ArithmaticOperator -> PLUS .)
    DOUBLECONSTANT  reduce using rule 77 (ArithmaticOperator -> PLUS .)
    STRINGCONSTANT  reduce using rule 77 (ArithmaticOperator -> PLUS .)
    BOOLEANCONSTANT reduce using rule 77 (ArithmaticOperator -> PLUS .)
    NULL            reduce using rule 77 (ArithmaticOperator -> PLUS .)


state 120

    (78) ArithmaticOperator -> MINUS .

    THIS            reduce using rule 78 (ArithmaticOperator -> MINUS .)
    LEFTPAREN       reduce using rule 78 (ArithmaticOperator -> MINUS .)
    MINUS           reduce using rule 78 (ArithmaticOperator -> MINUS .)
    NOT             reduce using rule 78 (ArithmaticOperator -> MINUS .)
    READLN          reduce using rule 78 (ArithmaticOperator -> MINUS .)
    NEW             reduce using rule 78 (ArithmaticOperator -> MINUS .)
    NEWARRAY        reduce using rule 78 (ArithmaticOperator -> MINUS .)
    ID              reduce using rule 78 (ArithmaticOperator -> MINUS .)
    INTCONSTANT     reduce using rule 78 (ArithmaticOperator -> MINUS .)
    DOUBLECONSTANT  reduce using rule 78 (ArithmaticOperator -> MINUS .)
    STRINGCONSTANT  reduce using rule 78 (ArithmaticOperator -> MINUS .)
    BOOLEANCONSTANT reduce using rule 78 (ArithmaticOperator -> MINUS .)
    NULL            reduce using rule 78 (ArithmaticOperator -> MINUS .)


state 121

    (79) ArithmaticOperator -> MULTIPLICATION .

    THIS            reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    LEFTPAREN       reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    MINUS           reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    NOT             reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    READLN          reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    NEW             reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    NEWARRAY        reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    ID              reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    INTCONSTANT     reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    DOUBLECONSTANT  reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    STRINGCONSTANT  reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    BOOLEANCONSTANT reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)
    NULL            reduce using rule 79 (ArithmaticOperator -> MULTIPLICATION .)


state 122

    (80) ArithmaticOperator -> DIVISION .

    THIS            reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    LEFTPAREN       reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    MINUS           reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    NOT             reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    READLN          reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    NEW             reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    NEWARRAY        reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    ID              reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    INTCONSTANT     reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    DOUBLECONSTANT  reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    STRINGCONSTANT  reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    BOOLEANCONSTANT reduce using rule 80 (ArithmaticOperator -> DIVISION .)
    NULL            reduce using rule 80 (ArithmaticOperator -> DIVISION .)


state 123

    (81) ArithmaticOperator -> MOD .

    THIS            reduce using rule 81 (ArithmaticOperator -> MOD .)
    LEFTPAREN       reduce using rule 81 (ArithmaticOperator -> MOD .)
    MINUS           reduce using rule 81 (ArithmaticOperator -> MOD .)
    NOT             reduce using rule 81 (ArithmaticOperator -> MOD .)
    READLN          reduce using rule 81 (ArithmaticOperator -> MOD .)
    NEW             reduce using rule 81 (ArithmaticOperator -> MOD .)
    NEWARRAY        reduce using rule 81 (ArithmaticOperator -> MOD .)
    ID              reduce using rule 81 (ArithmaticOperator -> MOD .)
    INTCONSTANT     reduce using rule 81 (ArithmaticOperator -> MOD .)
    DOUBLECONSTANT  reduce using rule 81 (ArithmaticOperator -> MOD .)
    STRINGCONSTANT  reduce using rule 81 (ArithmaticOperator -> MOD .)
    BOOLEANCONSTANT reduce using rule 81 (ArithmaticOperator -> MOD .)
    NULL            reduce using rule 81 (ArithmaticOperator -> MOD .)


state 124

    (82) CompareOperator -> LESS .

    THIS            reduce using rule 82 (CompareOperator -> LESS .)
    LEFTPAREN       reduce using rule 82 (CompareOperator -> LESS .)
    MINUS           reduce using rule 82 (CompareOperator -> LESS .)
    NOT             reduce using rule 82 (CompareOperator -> LESS .)
    READLN          reduce using rule 82 (CompareOperator -> LESS .)
    NEW             reduce using rule 82 (CompareOperator -> LESS .)
    NEWARRAY        reduce using rule 82 (CompareOperator -> LESS .)
    ID              reduce using rule 82 (CompareOperator -> LESS .)
    INTCONSTANT     reduce using rule 82 (CompareOperator -> LESS .)
    DOUBLECONSTANT  reduce using rule 82 (CompareOperator -> LESS .)
    STRINGCONSTANT  reduce using rule 82 (CompareOperator -> LESS .)
    BOOLEANCONSTANT reduce using rule 82 (CompareOperator -> LESS .)
    NULL            reduce using rule 82 (CompareOperator -> LESS .)


state 125

    (83) CompareOperator -> LESSEQUAL .

    THIS            reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    LEFTPAREN       reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    MINUS           reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    NOT             reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    READLN          reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    NEW             reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    NEWARRAY        reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    ID              reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    INTCONSTANT     reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    DOUBLECONSTANT  reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    STRINGCONSTANT  reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    BOOLEANCONSTANT reduce using rule 83 (CompareOperator -> LESSEQUAL .)
    NULL            reduce using rule 83 (CompareOperator -> LESSEQUAL .)


state 126

    (84) CompareOperator -> GREATER .

    THIS            reduce using rule 84 (CompareOperator -> GREATER .)
    LEFTPAREN       reduce using rule 84 (CompareOperator -> GREATER .)
    MINUS           reduce using rule 84 (CompareOperator -> GREATER .)
    NOT             reduce using rule 84 (CompareOperator -> GREATER .)
    READLN          reduce using rule 84 (CompareOperator -> GREATER .)
    NEW             reduce using rule 84 (CompareOperator -> GREATER .)
    NEWARRAY        reduce using rule 84 (CompareOperator -> GREATER .)
    ID              reduce using rule 84 (CompareOperator -> GREATER .)
    INTCONSTANT     reduce using rule 84 (CompareOperator -> GREATER .)
    DOUBLECONSTANT  reduce using rule 84 (CompareOperator -> GREATER .)
    STRINGCONSTANT  reduce using rule 84 (CompareOperator -> GREATER .)
    BOOLEANCONSTANT reduce using rule 84 (CompareOperator -> GREATER .)
    NULL            reduce using rule 84 (CompareOperator -> GREATER .)


state 127

    (85) CompareOperator -> GREATEREQUAL .

    THIS            reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    LEFTPAREN       reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    MINUS           reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    NOT             reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    READLN          reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    NEW             reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    NEWARRAY        reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    ID              reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    INTCONSTANT     reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    DOUBLECONSTANT  reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    STRINGCONSTANT  reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    BOOLEANCONSTANT reduce using rule 85 (CompareOperator -> GREATEREQUAL .)
    NULL            reduce using rule 85 (CompareOperator -> GREATEREQUAL .)


state 128

    (86) CompareOperator -> EQUAL .

    THIS            reduce using rule 86 (CompareOperator -> EQUAL .)
    LEFTPAREN       reduce using rule 86 (CompareOperator -> EQUAL .)
    MINUS           reduce using rule 86 (CompareOperator -> EQUAL .)
    NOT             reduce using rule 86 (CompareOperator -> EQUAL .)
    READLN          reduce using rule 86 (CompareOperator -> EQUAL .)
    NEW             reduce using rule 86 (CompareOperator -> EQUAL .)
    NEWARRAY        reduce using rule 86 (CompareOperator -> EQUAL .)
    ID              reduce using rule 86 (CompareOperator -> EQUAL .)
    INTCONSTANT     reduce using rule 86 (CompareOperator -> EQUAL .)
    DOUBLECONSTANT  reduce using rule 86 (CompareOperator -> EQUAL .)
    STRINGCONSTANT  reduce using rule 86 (CompareOperator -> EQUAL .)
    BOOLEANCONSTANT reduce using rule 86 (CompareOperator -> EQUAL .)
    NULL            reduce using rule 86 (CompareOperator -> EQUAL .)


state 129

    (87) CompareOperator -> NOTEQUAL .

    THIS            reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    LEFTPAREN       reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    MINUS           reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    NOT             reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    READLN          reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    NEW             reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    NEWARRAY        reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    ID              reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    INTCONSTANT     reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    DOUBLECONSTANT  reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    STRINGCONSTANT  reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    BOOLEANCONSTANT reduce using rule 87 (CompareOperator -> NOTEQUAL .)
    NULL            reduce using rule 87 (CompareOperator -> NOTEQUAL .)


state 130

    (88) LogicalOperator -> AND .

    THIS            reduce using rule 88 (LogicalOperator -> AND .)
    LEFTPAREN       reduce using rule 88 (LogicalOperator -> AND .)
    MINUS           reduce using rule 88 (LogicalOperator -> AND .)
    NOT             reduce using rule 88 (LogicalOperator -> AND .)
    READLN          reduce using rule 88 (LogicalOperator -> AND .)
    NEW             reduce using rule 88 (LogicalOperator -> AND .)
    NEWARRAY        reduce using rule 88 (LogicalOperator -> AND .)
    ID              reduce using rule 88 (LogicalOperator -> AND .)
    INTCONSTANT     reduce using rule 88 (LogicalOperator -> AND .)
    DOUBLECONSTANT  reduce using rule 88 (LogicalOperator -> AND .)
    STRINGCONSTANT  reduce using rule 88 (LogicalOperator -> AND .)
    BOOLEANCONSTANT reduce using rule 88 (LogicalOperator -> AND .)
    NULL            reduce using rule 88 (LogicalOperator -> AND .)


state 131

    (89) LogicalOperator -> OR .

    THIS            reduce using rule 89 (LogicalOperator -> OR .)
    LEFTPAREN       reduce using rule 89 (LogicalOperator -> OR .)
    MINUS           reduce using rule 89 (LogicalOperator -> OR .)
    NOT             reduce using rule 89 (LogicalOperator -> OR .)
    READLN          reduce using rule 89 (LogicalOperator -> OR .)
    NEW             reduce using rule 89 (LogicalOperator -> OR .)
    NEWARRAY        reduce using rule 89 (LogicalOperator -> OR .)
    ID              reduce using rule 89 (LogicalOperator -> OR .)
    INTCONSTANT     reduce using rule 89 (LogicalOperator -> OR .)
    DOUBLECONSTANT  reduce using rule 89 (LogicalOperator -> OR .)
    STRINGCONSTANT  reduce using rule 89 (LogicalOperator -> OR .)
    BOOLEANCONSTANT reduce using rule 89 (LogicalOperator -> OR .)
    NULL            reduce using rule 89 (LogicalOperator -> OR .)


state 132

    (63) Expression -> LVal ASSIGNOP . Expression
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    LVal                           shift and go to state 88
    Expression                     shift and go to state 156
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 133

    (91) LVal -> LVal LEFTBRACKET . Expression RIGHTBRACKET
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    LVal                           shift and go to state 88
    Expression                     shift and go to state 157
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 134

    (92) LVal -> LVal PERIOD . ID

    ID              shift and go to state 158


state 135

    (68) Expression -> LEFTPAREN Expression . RIGHTPAREN
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

    RIGHTPAREN      shift and go to state 159
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 136

    (69) Expression -> MINUS Expression .
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 69 (Expression -> MINUS Expression .)
    RIGHTPAREN      reduce using rule 69 (Expression -> MINUS Expression .)
    RIGHTBRACKET    reduce using rule 69 (Expression -> MINUS Expression .)
    COMMA           reduce using rule 69 (Expression -> MINUS Expression .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! PLUS            [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! MINUS           [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! DIVISION        [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! MOD             [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! LESS            [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! LESSEQUAL       [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! GREATER         [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! EQUAL           [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! NOTEQUAL        [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! AND             [ reduce using rule 69 (Expression -> MINUS Expression .) ]
  ! OR              [ reduce using rule 69 (Expression -> MINUS Expression .) ]

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 137

    (73) Expression -> NOT Expression .
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 73 (Expression -> NOT Expression .)
    RIGHTPAREN      reduce using rule 73 (Expression -> NOT Expression .)
    RIGHTBRACKET    reduce using rule 73 (Expression -> NOT Expression .)
    COMMA           reduce using rule 73 (Expression -> NOT Expression .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! PLUS            [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! MINUS           [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! DIVISION        [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! MOD             [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! LESS            [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! LESSEQUAL       [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! GREATER         [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! EQUAL           [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! NOTEQUAL        [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! AND             [ reduce using rule 73 (Expression -> NOT Expression .) ]
  ! OR              [ reduce using rule 73 (Expression -> NOT Expression .) ]

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 138

    (74) Expression -> READLN LEFTPAREN . RIGHTPAREN

    RIGHTPAREN      shift and go to state 160


state 139

    (75) Expression -> NEW LEFTPAREN . ID RIGHTPAREN

    ID              shift and go to state 161


state 140

    (93) Call -> ID LEFTPAREN . Actuals RIGHTPAREN
    (95) Actuals -> . ExpressionList
    (96) Actuals -> . empty
    (61) ExpressionList -> . Expression COMMA ExpressionList
    (62) ExpressionList -> . Expression
    (102) empty -> .
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    RIGHTPAREN      reduce using rule 102 (empty -> .)
    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Actuals                        shift and go to state 162
    ExpressionList                 shift and go to state 163
    empty                          shift and go to state 164
    Expression                     shift and go to state 165
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 141

    (94) Call -> ID PERIOD . ID LEFTPAREN Actuals RIGHTPAREN

    ID              shift and go to state 166


state 142

    (76) Expression -> NEWARRAY LEFTPAREN . INTCONSTANT COMMA Type RIGHTPAREN

    INTCONSTANT     shift and go to state 167


state 143

    (51) IfStatement -> IF LEFTPAREN . Expression RIGHTPAREN Statement OptionalElse
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 168
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 144

    (54) WhileStatement -> WHILE LEFTPAREN . Expression RIGHTPAREN Statement
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 169
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 145

    (55) ForStatement -> FOR LEFTPAREN . OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
    (56) OptionalExpression -> . Expression
    (57) OptionalExpression -> . empty
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (102) empty -> .
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    SEMICOLON       reduce using rule 102 (empty -> .)
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    OptionalExpression             shift and go to state 170
    Expression                     shift and go to state 148
    empty                          shift and go to state 149
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 146

    (58) BreakStatement -> BREAK SEMICOLON .

    SEMICOLON       reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    THIS            reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    LEFTPAREN       reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    MINUS           reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    NOT             reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    READLN          reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    NEW             reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    NEWARRAY        reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    IF              reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    FOR             reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    PRINTLN         reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    LEFTBRACE       reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    ID              reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    INTCONSTANT     reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    DOUBLECONSTANT  reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    STRINGCONSTANT  reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    BOOLEANCONSTANT reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    NULL            reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    RIGHTBRACE      reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)
    ELSE            reduce using rule 58 (BreakStatement -> BREAK SEMICOLON .)


state 147

    (59) ReturnStatement -> RETURN OptionalExpression . SEMICOLON

    SEMICOLON       shift and go to state 171


state 148

    (56) OptionalExpression -> Expression .
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

    SEMICOLON       reduce using rule 56 (OptionalExpression -> Expression .)
    RIGHTPAREN      reduce using rule 56 (OptionalExpression -> Expression .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 149

    (57) OptionalExpression -> empty .

    SEMICOLON       reduce using rule 57 (OptionalExpression -> empty .)
    RIGHTPAREN      reduce using rule 57 (OptionalExpression -> empty .)


state 150

    (60) PrintStatement -> PRINTLN LEFTPAREN . ExpressionList RIGHTPAREN SEMICOLON
    (61) ExpressionList -> . Expression COMMA ExpressionList
    (62) ExpressionList -> . Expression
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    ExpressionList                 shift and go to state 172
    Expression                     shift and go to state 165
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 151

    (35) Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .

    VOID            reduce using rule 35 (Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    INT             reduce using rule 35 (Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    DOUBLE          reduce using rule 35 (Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 35 (Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    STRING          reduce using rule 35 (Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    ID              reduce using rule 35 (Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    RIGHTBRACE      reduce using rule 35 (Prototype -> Type ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)


state 152

    (36) Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .

    VOID            reduce using rule 36 (Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    INT             reduce using rule 36 (Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    DOUBLE          reduce using rule 36 (Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 36 (Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    STRING          reduce using rule 36 (Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    ID              reduce using rule 36 (Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)
    RIGHTBRACE      reduce using rule 36 (Prototype -> VOID ID LEFTPAREN Formals RIGHTPAREN SEMICOLON .)


state 153

    (70) Expression -> Expression ArithmaticOperator Expression .
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .)
    RIGHTPAREN      reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .)
    RIGHTBRACKET    reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .)
    COMMA           reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! PLUS            [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! MINUS           [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! DIVISION        [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! MOD             [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! LESS            [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! LESSEQUAL       [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! GREATER         [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! EQUAL           [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! NOTEQUAL        [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! AND             [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]
  ! OR              [ reduce using rule 70 (Expression -> Expression ArithmaticOperator Expression .) ]

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 154

    (71) Expression -> Expression CompareOperator Expression .
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 71 (Expression -> Expression CompareOperator Expression .)
    RIGHTPAREN      reduce using rule 71 (Expression -> Expression CompareOperator Expression .)
    RIGHTBRACKET    reduce using rule 71 (Expression -> Expression CompareOperator Expression .)
    COMMA           reduce using rule 71 (Expression -> Expression CompareOperator Expression .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! PLUS            [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! MINUS           [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! DIVISION        [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! MOD             [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! LESS            [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! LESSEQUAL       [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! GREATER         [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! EQUAL           [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! NOTEQUAL        [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! AND             [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]
  ! OR              [ reduce using rule 71 (Expression -> Expression CompareOperator Expression .) ]

    CompareOperator                shift and go to state 117
    ArithmaticOperator             shift and go to state 116
    LogicalOperator                shift and go to state 118

state 155

    (72) Expression -> Expression LogicalOperator Expression .
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 72 (Expression -> Expression LogicalOperator Expression .)
    RIGHTPAREN      reduce using rule 72 (Expression -> Expression LogicalOperator Expression .)
    RIGHTBRACKET    reduce using rule 72 (Expression -> Expression LogicalOperator Expression .)
    COMMA           reduce using rule 72 (Expression -> Expression LogicalOperator Expression .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! PLUS            [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! MINUS           [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! DIVISION        [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! MOD             [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! LESS            [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! LESSEQUAL       [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! GREATER         [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! EQUAL           [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! NOTEQUAL        [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! AND             [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]
  ! OR              [ reduce using rule 72 (Expression -> Expression LogicalOperator Expression .) ]

    LogicalOperator                shift and go to state 118
    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117

state 156

    (63) Expression -> LVal ASSIGNOP Expression .
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .)
    RIGHTPAREN      reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .)
    RIGHTBRACKET    reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .)
    COMMA           reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! PLUS            [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! MINUS           [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! DIVISION        [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! MOD             [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! LESS            [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! LESSEQUAL       [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! GREATER         [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! EQUAL           [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! NOTEQUAL        [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! AND             [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]
  ! OR              [ reduce using rule 63 (Expression -> LVal ASSIGNOP Expression .) ]

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 157

    (91) LVal -> LVal LEFTBRACKET Expression . RIGHTBRACKET
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

    RIGHTBRACKET    shift and go to state 173
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 158

    (92) LVal -> LVal PERIOD ID .

    ASSIGNOP        reduce using rule 92 (LVal -> LVal PERIOD ID .)
    LEFTBRACKET     reduce using rule 92 (LVal -> LVal PERIOD ID .)
    PERIOD          reduce using rule 92 (LVal -> LVal PERIOD ID .)
    SEMICOLON       reduce using rule 92 (LVal -> LVal PERIOD ID .)
    PLUS            reduce using rule 92 (LVal -> LVal PERIOD ID .)
    MINUS           reduce using rule 92 (LVal -> LVal PERIOD ID .)
    MULTIPLICATION  reduce using rule 92 (LVal -> LVal PERIOD ID .)
    DIVISION        reduce using rule 92 (LVal -> LVal PERIOD ID .)
    MOD             reduce using rule 92 (LVal -> LVal PERIOD ID .)
    LESS            reduce using rule 92 (LVal -> LVal PERIOD ID .)
    LESSEQUAL       reduce using rule 92 (LVal -> LVal PERIOD ID .)
    GREATER         reduce using rule 92 (LVal -> LVal PERIOD ID .)
    GREATEREQUAL    reduce using rule 92 (LVal -> LVal PERIOD ID .)
    EQUAL           reduce using rule 92 (LVal -> LVal PERIOD ID .)
    NOTEQUAL        reduce using rule 92 (LVal -> LVal PERIOD ID .)
    AND             reduce using rule 92 (LVal -> LVal PERIOD ID .)
    OR              reduce using rule 92 (LVal -> LVal PERIOD ID .)
    RIGHTPAREN      reduce using rule 92 (LVal -> LVal PERIOD ID .)
    RIGHTBRACKET    reduce using rule 92 (LVal -> LVal PERIOD ID .)
    COMMA           reduce using rule 92 (LVal -> LVal PERIOD ID .)


state 159

    (68) Expression -> LEFTPAREN Expression RIGHTPAREN .

    SEMICOLON       reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    PLUS            reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    MINUS           reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    MULTIPLICATION  reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    DIVISION        reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    MOD             reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    LESS            reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    LESSEQUAL       reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    GREATER         reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    GREATEREQUAL    reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    EQUAL           reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    NOTEQUAL        reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    AND             reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    OR              reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)
    COMMA           reduce using rule 68 (Expression -> LEFTPAREN Expression RIGHTPAREN .)


state 160

    (74) Expression -> READLN LEFTPAREN RIGHTPAREN .

    SEMICOLON       reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    PLUS            reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    MINUS           reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    MULTIPLICATION  reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    DIVISION        reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    MOD             reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    LESS            reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    LESSEQUAL       reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    GREATER         reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    GREATEREQUAL    reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    EQUAL           reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    NOTEQUAL        reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    AND             reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    OR              reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)
    COMMA           reduce using rule 74 (Expression -> READLN LEFTPAREN RIGHTPAREN .)


state 161

    (75) Expression -> NEW LEFTPAREN ID . RIGHTPAREN

    RIGHTPAREN      shift and go to state 174


state 162

    (93) Call -> ID LEFTPAREN Actuals . RIGHTPAREN

    RIGHTPAREN      shift and go to state 175


state 163

    (95) Actuals -> ExpressionList .

    RIGHTPAREN      reduce using rule 95 (Actuals -> ExpressionList .)


state 164

    (96) Actuals -> empty .

    RIGHTPAREN      reduce using rule 96 (Actuals -> empty .)


state 165

    (61) ExpressionList -> Expression . COMMA ExpressionList
    (62) ExpressionList -> Expression .
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

    COMMA           shift and go to state 176
    RIGHTPAREN      reduce using rule 62 (ExpressionList -> Expression .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 166

    (94) Call -> ID PERIOD ID . LEFTPAREN Actuals RIGHTPAREN

    LEFTPAREN       shift and go to state 177


state 167

    (76) Expression -> NEWARRAY LEFTPAREN INTCONSTANT . COMMA Type RIGHTPAREN

    COMMA           shift and go to state 178


state 168

    (51) IfStatement -> IF LEFTPAREN Expression . RIGHTPAREN Statement OptionalElse
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

    RIGHTPAREN      shift and go to state 179
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 169

    (54) WhileStatement -> WHILE LEFTPAREN Expression . RIGHTPAREN Statement
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

    RIGHTPAREN      shift and go to state 180
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 170

    (55) ForStatement -> FOR LEFTPAREN OptionalExpression . SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement

    SEMICOLON       shift and go to state 181


state 171

    (59) ReturnStatement -> RETURN OptionalExpression SEMICOLON .

    SEMICOLON       reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    THIS            reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    LEFTPAREN       reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    MINUS           reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    NOT             reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    READLN          reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    NEW             reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    NEWARRAY        reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    IF              reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    WHILE           reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    FOR             reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    BREAK           reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    RETURN          reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    PRINTLN         reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    LEFTBRACE       reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    ID              reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    INTCONSTANT     reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    DOUBLECONSTANT  reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    STRINGCONSTANT  reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    BOOLEANCONSTANT reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    NULL            reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    RIGHTBRACE      reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)
    ELSE            reduce using rule 59 (ReturnStatement -> RETURN OptionalExpression SEMICOLON .)


state 172

    (60) PrintStatement -> PRINTLN LEFTPAREN ExpressionList . RIGHTPAREN SEMICOLON

    RIGHTPAREN      shift and go to state 182


state 173

    (91) LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .

    ASSIGNOP        reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    LEFTBRACKET     reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    PERIOD          reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    SEMICOLON       reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    PLUS            reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    MINUS           reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    MULTIPLICATION  reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    DIVISION        reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    MOD             reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    LESS            reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    LESSEQUAL       reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    GREATER         reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    GREATEREQUAL    reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    EQUAL           reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    NOTEQUAL        reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    AND             reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    OR              reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    RIGHTPAREN      reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)
    COMMA           reduce using rule 91 (LVal -> LVal LEFTBRACKET Expression RIGHTBRACKET .)


state 174

    (75) Expression -> NEW LEFTPAREN ID RIGHTPAREN .

    SEMICOLON       reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    PLUS            reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    MINUS           reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    MULTIPLICATION  reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    DIVISION        reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    MOD             reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    LESS            reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    LESSEQUAL       reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    GREATER         reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    GREATEREQUAL    reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    EQUAL           reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    NOTEQUAL        reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    AND             reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    OR              reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)
    COMMA           reduce using rule 75 (Expression -> NEW LEFTPAREN ID RIGHTPAREN .)


state 175

    (93) Call -> ID LEFTPAREN Actuals RIGHTPAREN .

    SEMICOLON       reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    PLUS            reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    MINUS           reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    MULTIPLICATION  reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    DIVISION        reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    MOD             reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    LESS            reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    LESSEQUAL       reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    GREATER         reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    GREATEREQUAL    reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    EQUAL           reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    NOTEQUAL        reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    AND             reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    OR              reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)
    COMMA           reduce using rule 93 (Call -> ID LEFTPAREN Actuals RIGHTPAREN .)


state 176

    (61) ExpressionList -> Expression COMMA . ExpressionList
    (61) ExpressionList -> . Expression COMMA ExpressionList
    (62) ExpressionList -> . Expression
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 165
    ExpressionList                 shift and go to state 183
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 177

    (94) Call -> ID PERIOD ID LEFTPAREN . Actuals RIGHTPAREN
    (95) Actuals -> . ExpressionList
    (96) Actuals -> . empty
    (61) ExpressionList -> . Expression COMMA ExpressionList
    (62) ExpressionList -> . Expression
    (102) empty -> .
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    RIGHTPAREN      reduce using rule 102 (empty -> .)
    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Actuals                        shift and go to state 184
    ExpressionList                 shift and go to state 163
    empty                          shift and go to state 164
    Expression                     shift and go to state 165
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 178

    (76) Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA . Type RIGHTPAREN
    (9) Type -> . INT
    (10) Type -> . DOUBLE
    (11) Type -> . BOOLEAN
    (12) Type -> . STRING
    (13) Type -> . Type LEFTBRACKET RIGHTBRACKET
    (14) Type -> . ID

    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    BOOLEAN         shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 9

    Type                           shift and go to state 185

state 179

    (51) IfStatement -> IF LEFTPAREN Expression RIGHTPAREN . Statement OptionalElse
    (42) Statement -> . Expression SEMICOLON
    (43) Statement -> . SEMICOLON
    (44) Statement -> . IfStatement
    (45) Statement -> . WhileStatement
    (46) Statement -> . ForStatement
    (47) Statement -> . BreakStatement
    (48) Statement -> . ReturnStatement
    (49) Statement -> . PrintStatement
    (50) Statement -> . StatementBlock
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (51) IfStatement -> . IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse
    (54) WhileStatement -> . WHILE LEFTPAREN Expression RIGHTPAREN Statement
    (55) ForStatement -> . FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
    (58) BreakStatement -> . BREAK SEMICOLON
    (59) ReturnStatement -> . RETURN OptionalExpression SEMICOLON
    (60) PrintStatement -> . PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON
    (37) StatementBlock -> . LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    SEMICOLON       shift and go to state 80
    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104
    PRINTLN         shift and go to state 105
    LEFTBRACE       shift and go to state 62
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 79
    Statement                      shift and go to state 186
    IfStatement                    shift and go to state 81
    WhileStatement                 shift and go to state 82
    ForStatement                   shift and go to state 83
    BreakStatement                 shift and go to state 84
    ReturnStatement                shift and go to state 85
    PrintStatement                 shift and go to state 86
    StatementBlock                 shift and go to state 87
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 180

    (54) WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN . Statement
    (42) Statement -> . Expression SEMICOLON
    (43) Statement -> . SEMICOLON
    (44) Statement -> . IfStatement
    (45) Statement -> . WhileStatement
    (46) Statement -> . ForStatement
    (47) Statement -> . BreakStatement
    (48) Statement -> . ReturnStatement
    (49) Statement -> . PrintStatement
    (50) Statement -> . StatementBlock
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (51) IfStatement -> . IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse
    (54) WhileStatement -> . WHILE LEFTPAREN Expression RIGHTPAREN Statement
    (55) ForStatement -> . FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
    (58) BreakStatement -> . BREAK SEMICOLON
    (59) ReturnStatement -> . RETURN OptionalExpression SEMICOLON
    (60) PrintStatement -> . PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON
    (37) StatementBlock -> . LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    SEMICOLON       shift and go to state 80
    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104
    PRINTLN         shift and go to state 105
    LEFTBRACE       shift and go to state 62
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 79
    Statement                      shift and go to state 187
    IfStatement                    shift and go to state 81
    WhileStatement                 shift and go to state 82
    ForStatement                   shift and go to state 83
    BreakStatement                 shift and go to state 84
    ReturnStatement                shift and go to state 85
    PrintStatement                 shift and go to state 86
    StatementBlock                 shift and go to state 87
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 181

    (55) ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON . Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 188
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 182

    (60) PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 183

    (61) ExpressionList -> Expression COMMA ExpressionList .

    RIGHTPAREN      reduce using rule 61 (ExpressionList -> Expression COMMA ExpressionList .)


state 184

    (94) Call -> ID PERIOD ID LEFTPAREN Actuals . RIGHTPAREN

    RIGHTPAREN      shift and go to state 190


state 185

    (76) Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type . RIGHTPAREN
    (13) Type -> Type . LEFTBRACKET RIGHTBRACKET

    RIGHTPAREN      shift and go to state 191
    LEFTBRACKET     shift and go to state 19


state 186

    (51) IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement . OptionalElse
    (52) OptionalElse -> . ELSE Statement
    (53) OptionalElse -> . empty
    (102) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 193
    SEMICOLON       reduce using rule 102 (empty -> .)
    THIS            reduce using rule 102 (empty -> .)
    LEFTPAREN       reduce using rule 102 (empty -> .)
    MINUS           reduce using rule 102 (empty -> .)
    NOT             reduce using rule 102 (empty -> .)
    READLN          reduce using rule 102 (empty -> .)
    NEW             reduce using rule 102 (empty -> .)
    NEWARRAY        reduce using rule 102 (empty -> .)
    IF              reduce using rule 102 (empty -> .)
    WHILE           reduce using rule 102 (empty -> .)
    FOR             reduce using rule 102 (empty -> .)
    BREAK           reduce using rule 102 (empty -> .)
    RETURN          reduce using rule 102 (empty -> .)
    PRINTLN         reduce using rule 102 (empty -> .)
    LEFTBRACE       reduce using rule 102 (empty -> .)
    ID              reduce using rule 102 (empty -> .)
    INTCONSTANT     reduce using rule 102 (empty -> .)
    DOUBLECONSTANT  reduce using rule 102 (empty -> .)
    STRINGCONSTANT  reduce using rule 102 (empty -> .)
    BOOLEANCONSTANT reduce using rule 102 (empty -> .)
    NULL            reduce using rule 102 (empty -> .)
    RIGHTBRACE      reduce using rule 102 (empty -> .)

  ! ELSE            [ reduce using rule 102 (empty -> .) ]

    OptionalElse                   shift and go to state 192
    empty                          shift and go to state 194

state 187

    (54) WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .

    SEMICOLON       reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    THIS            reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    LEFTPAREN       reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    MINUS           reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    NOT             reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    READLN          reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    NEW             reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    NEWARRAY        reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    IF              reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    WHILE           reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    FOR             reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    BREAK           reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    RETURN          reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    PRINTLN         reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    LEFTBRACE       reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    ID              reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    INTCONSTANT     reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    DOUBLECONSTANT  reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    STRINGCONSTANT  reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    BOOLEANCONSTANT reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    NULL            reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    RIGHTBRACE      reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)
    ELSE            reduce using rule 54 (WhileStatement -> WHILE LEFTPAREN Expression RIGHTPAREN Statement .)


state 188

    (55) ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression . SEMICOLON OptionalExpression RIGHTPAREN Statement
    (70) Expression -> Expression . ArithmaticOperator Expression
    (71) Expression -> Expression . CompareOperator Expression
    (72) Expression -> Expression . LogicalOperator Expression
    (77) ArithmaticOperator -> . PLUS
    (78) ArithmaticOperator -> . MINUS
    (79) ArithmaticOperator -> . MULTIPLICATION
    (80) ArithmaticOperator -> . DIVISION
    (81) ArithmaticOperator -> . MOD
    (82) CompareOperator -> . LESS
    (83) CompareOperator -> . LESSEQUAL
    (84) CompareOperator -> . GREATER
    (85) CompareOperator -> . GREATEREQUAL
    (86) CompareOperator -> . EQUAL
    (87) CompareOperator -> . NOTEQUAL
    (88) LogicalOperator -> . AND
    (89) LogicalOperator -> . OR

    SEMICOLON       shift and go to state 195
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    MULTIPLICATION  shift and go to state 121
    DIVISION        shift and go to state 122
    MOD             shift and go to state 123
    LESS            shift and go to state 124
    LESSEQUAL       shift and go to state 125
    GREATER         shift and go to state 126
    GREATEREQUAL    shift and go to state 127
    EQUAL           shift and go to state 128
    NOTEQUAL        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131

    ArithmaticOperator             shift and go to state 116
    CompareOperator                shift and go to state 117
    LogicalOperator                shift and go to state 118

state 189

    (60) PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .

    SEMICOLON       reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    THIS            reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    LEFTPAREN       reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    MINUS           reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    NOT             reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    READLN          reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    NEW             reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    NEWARRAY        reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    IF              reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    WHILE           reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    FOR             reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    BREAK           reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    PRINTLN         reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    LEFTBRACE       reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    ID              reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    INTCONSTANT     reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    DOUBLECONSTANT  reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    STRINGCONSTANT  reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    BOOLEANCONSTANT reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    NULL            reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    RIGHTBRACE      reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)
    ELSE            reduce using rule 60 (PrintStatement -> PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON .)


state 190

    (94) Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .

    SEMICOLON       reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    PLUS            reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    MINUS           reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    MULTIPLICATION  reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    DIVISION        reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    MOD             reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    LESS            reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    LESSEQUAL       reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    GREATER         reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    GREATEREQUAL    reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    EQUAL           reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    NOTEQUAL        reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    AND             reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    OR              reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)
    COMMA           reduce using rule 94 (Call -> ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN .)


state 191

    (76) Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .

    SEMICOLON       reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    PLUS            reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    MINUS           reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    MULTIPLICATION  reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    DIVISION        reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    MOD             reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    LESS            reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    LESSEQUAL       reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    GREATER         reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    GREATEREQUAL    reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    EQUAL           reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    NOTEQUAL        reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    AND             reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    OR              reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    RIGHTBRACKET    reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)
    COMMA           reduce using rule 76 (Expression -> NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN .)


state 192

    (51) IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .

    SEMICOLON       reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    THIS            reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    LEFTPAREN       reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    MINUS           reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    NOT             reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    READLN          reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    NEW             reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    NEWARRAY        reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    IF              reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    WHILE           reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    FOR             reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    BREAK           reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    RETURN          reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    PRINTLN         reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    LEFTBRACE       reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    ID              reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    INTCONSTANT     reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    DOUBLECONSTANT  reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    STRINGCONSTANT  reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    BOOLEANCONSTANT reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    NULL            reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    RIGHTBRACE      reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)
    ELSE            reduce using rule 51 (IfStatement -> IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse .)


state 193

    (52) OptionalElse -> ELSE . Statement
    (42) Statement -> . Expression SEMICOLON
    (43) Statement -> . SEMICOLON
    (44) Statement -> . IfStatement
    (45) Statement -> . WhileStatement
    (46) Statement -> . ForStatement
    (47) Statement -> . BreakStatement
    (48) Statement -> . ReturnStatement
    (49) Statement -> . PrintStatement
    (50) Statement -> . StatementBlock
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (51) IfStatement -> . IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse
    (54) WhileStatement -> . WHILE LEFTPAREN Expression RIGHTPAREN Statement
    (55) ForStatement -> . FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
    (58) BreakStatement -> . BREAK SEMICOLON
    (59) ReturnStatement -> . RETURN OptionalExpression SEMICOLON
    (60) PrintStatement -> . PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON
    (37) StatementBlock -> . LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    SEMICOLON       shift and go to state 80
    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104
    PRINTLN         shift and go to state 105
    LEFTBRACE       shift and go to state 62
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Statement                      shift and go to state 196
    Expression                     shift and go to state 79
    IfStatement                    shift and go to state 81
    WhileStatement                 shift and go to state 82
    ForStatement                   shift and go to state 83
    BreakStatement                 shift and go to state 84
    ReturnStatement                shift and go to state 85
    PrintStatement                 shift and go to state 86
    StatementBlock                 shift and go to state 87
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 194

    (53) OptionalElse -> empty .

    ELSE            reduce using rule 53 (OptionalElse -> empty .)
    SEMICOLON       reduce using rule 53 (OptionalElse -> empty .)
    THIS            reduce using rule 53 (OptionalElse -> empty .)
    LEFTPAREN       reduce using rule 53 (OptionalElse -> empty .)
    MINUS           reduce using rule 53 (OptionalElse -> empty .)
    NOT             reduce using rule 53 (OptionalElse -> empty .)
    READLN          reduce using rule 53 (OptionalElse -> empty .)
    NEW             reduce using rule 53 (OptionalElse -> empty .)
    NEWARRAY        reduce using rule 53 (OptionalElse -> empty .)
    IF              reduce using rule 53 (OptionalElse -> empty .)
    WHILE           reduce using rule 53 (OptionalElse -> empty .)
    FOR             reduce using rule 53 (OptionalElse -> empty .)
    BREAK           reduce using rule 53 (OptionalElse -> empty .)
    RETURN          reduce using rule 53 (OptionalElse -> empty .)
    PRINTLN         reduce using rule 53 (OptionalElse -> empty .)
    LEFTBRACE       reduce using rule 53 (OptionalElse -> empty .)
    ID              reduce using rule 53 (OptionalElse -> empty .)
    INTCONSTANT     reduce using rule 53 (OptionalElse -> empty .)
    DOUBLECONSTANT  reduce using rule 53 (OptionalElse -> empty .)
    STRINGCONSTANT  reduce using rule 53 (OptionalElse -> empty .)
    BOOLEANCONSTANT reduce using rule 53 (OptionalElse -> empty .)
    NULL            reduce using rule 53 (OptionalElse -> empty .)
    RIGHTBRACE      reduce using rule 53 (OptionalElse -> empty .)


state 195

    (55) ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON . OptionalExpression RIGHTPAREN Statement
    (56) OptionalExpression -> . Expression
    (57) OptionalExpression -> . empty
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (102) empty -> .
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    RIGHTPAREN      reduce using rule 102 (empty -> .)
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    OptionalExpression             shift and go to state 197
    Expression                     shift and go to state 148
    empty                          shift and go to state 149
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 196

    (52) OptionalElse -> ELSE Statement .

    ELSE            reduce using rule 52 (OptionalElse -> ELSE Statement .)
    SEMICOLON       reduce using rule 52 (OptionalElse -> ELSE Statement .)
    THIS            reduce using rule 52 (OptionalElse -> ELSE Statement .)
    LEFTPAREN       reduce using rule 52 (OptionalElse -> ELSE Statement .)
    MINUS           reduce using rule 52 (OptionalElse -> ELSE Statement .)
    NOT             reduce using rule 52 (OptionalElse -> ELSE Statement .)
    READLN          reduce using rule 52 (OptionalElse -> ELSE Statement .)
    NEW             reduce using rule 52 (OptionalElse -> ELSE Statement .)
    NEWARRAY        reduce using rule 52 (OptionalElse -> ELSE Statement .)
    IF              reduce using rule 52 (OptionalElse -> ELSE Statement .)
    WHILE           reduce using rule 52 (OptionalElse -> ELSE Statement .)
    FOR             reduce using rule 52 (OptionalElse -> ELSE Statement .)
    BREAK           reduce using rule 52 (OptionalElse -> ELSE Statement .)
    RETURN          reduce using rule 52 (OptionalElse -> ELSE Statement .)
    PRINTLN         reduce using rule 52 (OptionalElse -> ELSE Statement .)
    LEFTBRACE       reduce using rule 52 (OptionalElse -> ELSE Statement .)
    ID              reduce using rule 52 (OptionalElse -> ELSE Statement .)
    INTCONSTANT     reduce using rule 52 (OptionalElse -> ELSE Statement .)
    DOUBLECONSTANT  reduce using rule 52 (OptionalElse -> ELSE Statement .)
    STRINGCONSTANT  reduce using rule 52 (OptionalElse -> ELSE Statement .)
    BOOLEANCONSTANT reduce using rule 52 (OptionalElse -> ELSE Statement .)
    NULL            reduce using rule 52 (OptionalElse -> ELSE Statement .)
    RIGHTBRACE      reduce using rule 52 (OptionalElse -> ELSE Statement .)


state 197

    (55) ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression . RIGHTPAREN Statement

    RIGHTPAREN      shift and go to state 198


state 198

    (55) ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN . Statement
    (42) Statement -> . Expression SEMICOLON
    (43) Statement -> . SEMICOLON
    (44) Statement -> . IfStatement
    (45) Statement -> . WhileStatement
    (46) Statement -> . ForStatement
    (47) Statement -> . BreakStatement
    (48) Statement -> . ReturnStatement
    (49) Statement -> . PrintStatement
    (50) Statement -> . StatementBlock
    (63) Expression -> . LVal ASSIGNOP Expression
    (64) Expression -> . Constant
    (65) Expression -> . LVal
    (66) Expression -> . THIS
    (67) Expression -> . Call
    (68) Expression -> . LEFTPAREN Expression RIGHTPAREN
    (69) Expression -> . MINUS Expression
    (70) Expression -> . Expression ArithmaticOperator Expression
    (71) Expression -> . Expression CompareOperator Expression
    (72) Expression -> . Expression LogicalOperator Expression
    (73) Expression -> . NOT Expression
    (74) Expression -> . READLN LEFTPAREN RIGHTPAREN
    (75) Expression -> . NEW LEFTPAREN ID RIGHTPAREN
    (76) Expression -> . NEWARRAY LEFTPAREN INTCONSTANT COMMA Type RIGHTPAREN
    (51) IfStatement -> . IF LEFTPAREN Expression RIGHTPAREN Statement OptionalElse
    (54) WhileStatement -> . WHILE LEFTPAREN Expression RIGHTPAREN Statement
    (55) ForStatement -> . FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement
    (58) BreakStatement -> . BREAK SEMICOLON
    (59) ReturnStatement -> . RETURN OptionalExpression SEMICOLON
    (60) PrintStatement -> . PRINTLN LEFTPAREN ExpressionList RIGHTPAREN SEMICOLON
    (37) StatementBlock -> . LEFTBRACE VaribleDeclarationKleene StatementKleene RIGHTBRACE
    (90) LVal -> . ID
    (91) LVal -> . LVal LEFTBRACKET Expression RIGHTBRACKET
    (92) LVal -> . LVal PERIOD ID
    (97) Constant -> . INTCONSTANT
    (98) Constant -> . DOUBLECONSTANT
    (99) Constant -> . STRINGCONSTANT
    (100) Constant -> . BOOLEANCONSTANT
    (101) Constant -> . NULL
    (93) Call -> . ID LEFTPAREN Actuals RIGHTPAREN
    (94) Call -> . ID PERIOD ID LEFTPAREN Actuals RIGHTPAREN

    SEMICOLON       shift and go to state 80
    THIS            shift and go to state 90
    LEFTPAREN       shift and go to state 92
    MINUS           shift and go to state 93
    NOT             shift and go to state 94
    READLN          shift and go to state 95
    NEW             shift and go to state 96
    NEWARRAY        shift and go to state 98
    IF              shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    BREAK           shift and go to state 103
    RETURN          shift and go to state 104
    PRINTLN         shift and go to state 105
    LEFTBRACE       shift and go to state 62
    ID              shift and go to state 97
    INTCONSTANT     shift and go to state 99
    DOUBLECONSTANT  shift and go to state 106
    STRINGCONSTANT  shift and go to state 107
    BOOLEANCONSTANT shift and go to state 108
    NULL            shift and go to state 109

    Expression                     shift and go to state 79
    Statement                      shift and go to state 199
    IfStatement                    shift and go to state 81
    WhileStatement                 shift and go to state 82
    ForStatement                   shift and go to state 83
    BreakStatement                 shift and go to state 84
    ReturnStatement                shift and go to state 85
    PrintStatement                 shift and go to state 86
    StatementBlock                 shift and go to state 87
    LVal                           shift and go to state 88
    Constant                       shift and go to state 89
    Call                           shift and go to state 91

state 199

    (55) ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .

    SEMICOLON       reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    THIS            reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    LEFTPAREN       reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    MINUS           reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    NOT             reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    READLN          reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    NEW             reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    NEWARRAY        reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    IF              reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    WHILE           reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    FOR             reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    BREAK           reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    RETURN          reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    PRINTLN         reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    LEFTBRACE       reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    ID              reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    INTCONSTANT     reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    DOUBLECONSTANT  reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    STRINGCONSTANT  reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    BOOLEANCONSTANT reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    NULL            reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    RIGHTBRACE      reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)
    ELSE            reduce using rule 55 (ForStatement -> FOR LEFTPAREN OptionalExpression SEMICOLON Expression SEMICOLON OptionalExpression RIGHTPAREN Statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 136 resolved as shift
WARNING: shift/reduce conflict for MOD in state 136 resolved as shift
WARNING: shift/reduce conflict for LESS in state 136 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for AND in state 136 resolved as shift
WARNING: shift/reduce conflict for OR in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 137 resolved as shift
WARNING: shift/reduce conflict for MOD in state 137 resolved as shift
WARNING: shift/reduce conflict for LESS in state 137 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 137 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for AND in state 137 resolved as shift
WARNING: shift/reduce conflict for OR in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 153 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 153 resolved as shift
WARNING: shift/reduce conflict for MOD in state 153 resolved as shift
WARNING: shift/reduce conflict for LESS in state 153 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 153 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 153 resolved as shift
WARNING: shift/reduce conflict for AND in state 153 resolved as shift
WARNING: shift/reduce conflict for OR in state 153 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 154 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 154 resolved as shift
WARNING: shift/reduce conflict for MOD in state 154 resolved as shift
WARNING: shift/reduce conflict for LESS in state 154 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 154 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for AND in state 154 resolved as shift
WARNING: shift/reduce conflict for OR in state 154 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 155 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 155 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 155 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 155 resolved as shift
WARNING: shift/reduce conflict for MOD in state 155 resolved as shift
WARNING: shift/reduce conflict for LESS in state 155 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 155 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for AND in state 155 resolved as shift
WARNING: shift/reduce conflict for OR in state 155 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 156 resolved as shift
WARNING: shift/reduce conflict for MOD in state 156 resolved as shift
WARNING: shift/reduce conflict for LESS in state 156 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 156 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for AND in state 156 resolved as shift
WARNING: shift/reduce conflict for OR in state 156 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 186 resolved as shift
